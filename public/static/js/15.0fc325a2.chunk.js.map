{"version":3,"sources":["routes/Admin/Order/components/index.js","routes/Admin/Order/components/columns.js"],"names":["Content","Layout","Footer","Pagination","DataTable","Order","connect","order","loading","models","props","handleDelete","records","rows","state","dispatch","type","payload","success","setState","filter","item","some","jItem","rowKey","handlePatch","record","visible","visibleTable","dataItems","PageHelper","create","self","this","history","location","pageData","columns","title","intl","formatMessage","messages","code","name","tableItem","filterType","sorter","formItem","fullName","phoneNumber","address","grandTotal","render","text","replace","itemCount","createdAt","moment","format","operating","width","Oper","Group","onChange","e","status","target","value","id","size","Button","disabled","pending","processing","completed","decline","Object","keys","sorts","length","filters","map","sortOrder","filteredValue","dataTableProps","showNum","isScroll","selectType","selectedRowKeys","page","pathname","toParams","onSelect","setPage","list","modalFormProps","modalOpts","onCancel","onSubmit","values","modalTableProps","tableProps","pagination","attribute","style","margin","quantity","price","discountPrice","total","className","Modal","BaseComponent"],"mappings":"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","file":"static/js/15.0fc325a2.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'dva';\nimport { Layout } from 'antd';\n\nimport BaseComponent from 'components/BaseComponent';\nimport DataTable from 'components/DataTable';\nimport { ModalForm, ModalTable } from 'components/Modal';\nimport PageHelper from '@/utils/pageHelper';\n\nimport { createColumns, createColumnsModal, } from './columns';\nimport './index.less';\n\nconst { Content, Footer } = Layout;\nconst { Pagination } = DataTable;\n\n@connect(({ order, loading }) => ({\n  order,\n  loading: loading.models.order\n}))\nclass Order extends BaseComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      record: null,\n      visible: false,\n      visibleTable: false,\n      dataItems: PageHelper.create(),\n      rows: []\n    }\n  }\n\n  handleDelete = records => {\n    const { rows } = this.state;\n    const { dispatch } = this.props;\n\n    dispatch({\n      type: 'order/remove',\n      payload: {\n        records,\n        success: () => {\n          // If the operation is successful, exclude the deleted row in the selected row\n          this.setState({\n            rows: rows.filter(\n              item => !records.some(jItem => jItem.rowKey === item.rowKey)\n            )\n          });\n        }\n      }\n    });\n  };\n\n  handlePatch = (records) => {\n    const { dispatch } = this.props;\n    dispatch({ type: 'order/patch', payload: { records }});\n  }\n\n  render() {\n    const { order, loading, dispatch, history, location } = this.props;\n    const { pageData, } = order;\n    const columns = createColumns(this);\n    const { rows, record, visible, dataItems, visibleTable } = this.state;\n\n    if (Object.keys(pageData.sorts).length || Object.keys(pageData.filters).length) {\n      columns.map(item => {\n        if (pageData.sorts[item.name] || pageData.filters[item.name]) {\n          item.tableItem = {\n            ...item.tableItem,\n            sortOrder: pageData.sorts[item.name],\n            filteredValue: pageData.filters[item.name]\n          }\n        }\n        return item;\n      })\n    }\n    const dataTableProps = {\n      loading,\n      columns,\n      rowKey: 'id',\n      dataItems: pageData,\n      showNum: false,\n      isScroll: true,\n      selectType: \"radio\",\n      selectedRowKeys: rows.map(item => item.id),\n      onChange: (page) => history.replace(location.pathname +pageData.toParams(page)),\n      onSelect: (keys, rows) => {\n        dataItems.setPage({list: rows[0][\"order_item\"]})\n        this.setState({ visibleTable: true  })\n      }\n    };\n    const modalFormProps = {\n      loading,\n      record,\n      visible,\n      columns,\n      modalOpts: {\n        width: 700\n      },\n      onCancel: () => {\n        this.setState({\n          record: null,\n          visible: false\n        });\n      },\n      // Add and modify will enter this method,\n      // can use the primary key or whether there is a record to distinguish the status\n      onSubmit: values => {\n        values = !record ? values : {...values, id: record.id}\n        dispatch({\n          type: 'order/save',\n          payload: {\n            values,\n            success: () => {\n              this.setState({\n                record: null,\n                visible: false\n              });\n            }\n          }\n        });\n      }\n    };\n\n    const modalTableProps = {\n      loading,\n      visible: visibleTable,\n      tableProps: {\n        showNum: false,\n        pagination: false,\n        dataItems,\n        selectType: null,\n      },\n      width: 1300,\n      columns: createColumnsModal(this),\n      onCancel: () => {\n        this.setState({ visibleTable: false });\n      },\n    }\n\n    return (\n      <Layout className=\"full-layout order-page\">\n        <Content className=\"has-footer\">\n          <DataTable {...dataTableProps} />\n        </Content>\n        <Footer>\n          <Pagination {...dataTableProps} />\n        </Footer>\n        <ModalTable {...modalTableProps} />\n        <ModalForm {...modalFormProps} />\n      </Layout>\n    );\n  }\n}\n\nexport default Order;\n","import React from 'react';\nimport { Radio } from 'antd';\nimport moment from 'moment';\nimport intl from 'react-intl-universal';\n\nimport DataTable from 'components/DataTable';\n\nimport messages from './../messages';\n\nexport const createColumns = (self) => {\n\treturn [\n    {\n      title: intl.formatMessage(messages.code),\n      name: 'code',\n      tableItem: {\n        filterType: \"input\",\n        sorter: true,\n      },\n      formItem: {},\n    },\n    {\n      title: intl.formatMessage(messages.fullName),\n      name: 'full_name',\n      tableItem: {\n        filterType: \"input\",\n        sorter: true,\n      },\n      formItem: {},\n    },\n    {\n      title: intl.formatMessage(messages.phoneNumber),\n      name: 'phone_number',\n      tableItem: {\n        filterType: \"input\",\n        sorter: true,\n      },\n      formItem: {},\n    },\n    {\n      title: intl.formatMessage(messages.address),\n      name: 'address',\n      tableItem: {\n        sorter: true,\n      },\n      formItem: {},\n    },\n    {\n      title: intl.formatMessage(messages.grandTotal),\n      name: 'grand_total',\n      tableItem: {\n        sorter: true,\n        render: text => text.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n      },\n      formItem: {},\n    },\n    {\n      title: intl.formatMessage(messages.itemCount),\n      name: 'item_count',\n      tableItem: {\n        sorter: true,\n      },\n      formItem: {},\n    },\n    {\n      title: intl.formatMessage(messages.createdAt),\n      name: 'created_at',\n      tableItem: {\n        filterType: \"datetime\",\n        sorter: true,\n        render(text) {\n          return moment(text).format(\"DD/MM/YYYY\");\n        }\n      },\n    },\n    {\n      title: intl.formatMessage(messages.operating),\n      tableItem: {\n        width: 180,\n        render: (text, record) => {\n          return (\n            <DataTable.Oper>\n              <Radio.Group onChange={(e) => self.handlePatch([{ status: e.target.value, id: record.id }])} value={record.status} size=\"small\">\n                <Radio.Button disabled={record.status !== \"pending\"} value=\"pending\">{intl.formatMessage(messages.pending)}</Radio.Button>\n                <Radio.Button value=\"processing\">{intl.formatMessage(messages.processing)}</Radio.Button>\n                <Radio.Button value=\"completed\">{intl.formatMessage(messages.completed)}</Radio.Button>\n                <Radio.Button value=\"decline\">{intl.formatMessage(messages.decline)}</Radio.Button>\n              </Radio.Group>\n            </DataTable.Oper>\n          )\n        }\n      }\n    }\n  ]\n};\nexport const createColumnsModal = (self) => {\n  return [\n    {\n      title: intl.formatMessage(messages.name),\n      name: 'name',\n      tableItem: {},\n      formItem: {},\n    },\n    {\n      title: intl.formatMessage(messages.attribute),\n      name: 'name_attribute',\n      tableItem: {\n        render: text => <pre style={{margin: 0}}>{text}</pre>\n      },\n      formItem: {},\n    },\n    {\n      title: intl.formatMessage(messages.quantity),\n      name: 'quantity',\n      tableItem: {},\n      formItem: {},\n    },\n    {\n      title: intl.formatMessage(messages.price),\n      name: 'price',\n      tableItem: {\n        render: text => text.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n      },\n      formItem: {},\n    },\n    {\n      title: intl.formatMessage(messages.discountPrice),\n      name: 'discount_price',\n      tableItem: {\n        render: text => text.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n      },\n      formItem: {},\n    },\n    {\n      title: intl.formatMessage(messages.total),\n      name: 'total',\n      tableItem: {},\n      formItem: {},\n    },\n  ]\n}\n"],"sourceRoot":""}