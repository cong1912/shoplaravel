{"version":3,"sources":["utils/pageHelper/index.js","components/DataTable/index.js","components/Form/messages/index.js","components/DataTable/messages/index.js","components/DataTable/DataTable.js","components/Form/model/input.js","components/BaseComponent/index.js","components/DataTable/Editable.js","components/Form/model/date.js","components/Modal/messages/index.js","components/Modal/ModalForm.js","components/DataTable/LoadTable.js","components/SearchBar/messages/index.js","components/SearchBar/SearchBar.js","components/SearchBar/index.js","components/Modal/ModalTable.js","components/Modal/ModalDragList.js","components/Modal/ModalArrayForm.js","components/Button/Button.js","components/Button/Ripple.js","components/Button/index.js","components/Form/Form.js","components/Form/index.js","components/Form/model sync /^/.*$","components/Form/model/password.js","components/Upload/Upload.js","components/Upload/index.js","components/Form/model/upload.js","components/Form/model/autocomplete.js","components/Form/model/cascade.js","components/Form/model/checkbox.js","components/Form/model/custom.js","components/Form/model/number.js","components/Form/model/radio.js","components/Form/model/select.js","components/Form/model/switch.js","components/Form/model/table.js","components/Form/model/transfer.js","components/Form/model/treeselect.js","components/TransferTree/List.js","components/TransferTree/Search.js","components/TransferTree/ListTree.js","components/TransferTree/TransferTree.js","components/TransferTree/index.js","components/Form/model/transfertree.js","components/Editor/config.js","components/Editor/Editor.js","components/Editor/index.js","components/Form/model/editor.js","components/MediaManagement/service/index.js","components/MediaManagement/messages/index.js","components/MediaManagement/index.js","components/Form/model/media.js"],"names":["PageHelper","pageInfo","config","pageHelper","requestFormat","resp","responseFormat","url","_request","_pairs","substring","indexOf","split","i","length","_pair","decodeURIComponent","create","PageInfo","DataTable","scope","submit","id","defaultMessage","reset","twoPasswords","twoInput","chosen","item","source","clickUpload","aims","popoverPassword","strong","medium","short","passwordMin","pleaseEnter","cancel","save","search","total","RangePicker","DatePicker","CheckboxGroup","Checkbox","Group","RadioboxGroup","Radio","props","searchInput","tableOnRow","record","index","selectType","keys","state","selectedRowKeys","rows","selectedRows","_rowKey","splice","push","onSelectChange","newSelectedRows","filter","setState","onSelect","handleTableChange","pagination","filters","sorts","dataItems","pageNum","pageSize","current","sortMap","field","order","Object","forEach","key","onChange","onShowSizeChange","console","log","getColumnSearchInput","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","ref","node","placeholder","intl","formatMessage","messages","value","e","target","onPressEnter","onClick","setTimeout","size","type","icon","className","filterIcon","filtered","style","color","undefined","onFilterDropdownVisibleChange","visible","select","getColumnSearchDate","dateRangePicker","moment","getColumnSearchCheckbox","options","map","label","codeName","code","getColumnSearchRadiobox","getSelectedRows","tableHeight","oldValue","rowKey","jtem","prevProps","prevState","isEqual","this","prefixCls","columns","showNum","alternateColor","rowSelection","isScroll","otherProps","classname","cx","colRowKey","hasLeftFixedCol","cols","col","primary","name","tableItem","dict","render","text","dic","fixed","myRender","$$","isFunction","editing","Editable","filterType","title","unshift","width","paging","objectAssign","showSizeChanger","showQuickJumper","showTotal","_rowSelection","onRow","_","scroll","x","scrollToFirstRowOnChange","dataSource","list","Component","Oper","prop","stopPropagation","children","Pagination","Tip","placement","defaultProps","TextArea","Input","formFieldOptions","defaultValue","normalize","rules","onBlur","form","preview","getPopupContainer","initval","Comp","autoComplete","BaseComponent","notice","onAdd","onUpdate","onDelete","isArray","content","Modal","onOk","handleDelete","onCancel","records","history","React","EditableContext","createContext","EditableCell","setFieldsValue","Consumer","warn","formProps","omit","Item","validateTrigger","require","toLowerCase","default","MonthPicker","RangePickerTime","TimePicker","format","isMoment","getCalendarContainer","date","dateString","initialValue","edit","new","ModalForm","closeModal","onSubmit","a","refs","validateFields","values","modalOpts","formOpts","loading","full","modalProps","top","destroyOnClose","footer","_columns","formItemLayout","labelCol","span","wrapperCol","Form","nextProps","LoadTable","option","newRows","loadData","jumpPage","newDataSource","assign","paginationContainer","dataTableProps","ReactDOM","createPortal","oldv","isObject","titleButtonTop","titleButtonBottom","errors","PlainComp","SearchBar","xs","md","xl","month","datetime","treeSelect","cascade","cascader","gutter","resetFields","searchForm","isReset","onSearch","errs","fieldName","message","error","group","appendTo","colopts","rowopts","ComponentRow","Row","ComponentCol","Col","ComponentItem","ComponentBtnGroup","Button","searchFields","searchItem","triggerNode","parentNode","initialValues","FieldComp","fieldType","noStyle","htmlType","resetForm","ModalTable","tableProps","searchBarProps","titleComp","_modalProps","confirmLoading","ModalDragList","onEdit","visibleEditMenu","changeFeatured","data","findItemById","newItem","array","temp","onDragEnd","items","onDrag","loop","parentId","onSave","maxDepth","spinning","renderItem","align","justify","status","danger","featured","onConfirm","closable","onClose","ModalArrayForm","check","onRemove","flex","ButtonGroup","uiButton","tooltip","overlayClassName","Ripple","createRipple","btnWidth","element","clientWidth","rect","getBoundingClientRect","btnOffsetTop","btnOffsetLeft","left","rippleX","pageX","rippleY","pageY","rippleAnimate","document","createElement","baseStyle","cssText","appendChild","requestAnimationFrame","remove","ghost","FormComp","onReset","_formItemLayout","layout","formFields","formItem","onFinish","scrollToFirstError","itemFormProps","lineProps","getValueFromEvent","Array","fileList","maxFileSize","fileTypes","max","getFieldValue","validator","rule","callback","msg","validatorMaxFile","validatorFileSize","validatorFileTypes","Promise","reject","resolve","some","join","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","module","exports","PasswordForm","confirmDirty","handleConfirmBlur","checkPassword","checkConfirm","force","repeat","required","min","concat","hasFeedback","Password","request","Upload","headers","action","newheaders","uploadProps","withHeaders","nextURL","prefix","test","beforeUpload","file","bool","PureComponent","renderUpload","btnIcon","fileName","args","Option","AutoComplete","AutoCompleteControlled","trim","handleSearch","_handleSearch","promise","then","listItem","catch","renderOptions","renderOptionItem","keyField","valueField","optionLabelProp","debounce","newState","autoComponentProps","defaultActiveFirstOption","filterOption","inputValue","toUpperCase","allowClear","suffix","level","opts","selectedOptions","buttonStyle","_initval","dictObj","checkboxProps","RadioGroup","RadioComp","showSearch","optionFilterProp","checked","checkedChildren","unCheckedChildren","defaultChecked","Select","TableControlled","modal","showModal","hideModal","getKeys","getRows","_value","titleKey","disabled","readOnly","mode","open","TransferControlled","triggerChange","nextTargetKeys","direction","moveKeys","comp","titles","targetKeys","okText","cancelText","TreeSelectForm","extra","List","handleDeleteItem","preventDefault","onDeleteItem","data-key","notFoundContent","listCls","classNames","Search","handleChange","handleClear","noop","ListTree","handleFilter","renderFilterResult","renderTreeNodes","treeKey","treeTitleKey","treeProps","dataRef","TreeNode","flatTreeData","asyncSearch","searchList","renderSearchItem","handleSelect","selectedItem","selectedNodes","_selectedNodes","onTreeSelected","_selectedKeys","info","selected","isLeaf","onExpand","targetNodes","expandedKeys","event","concatKeys","reduce","prev","next","autoExpandParent","treeData","titleText","searchPlaceholder","showTree","multiple","handleSelectAll","TransferTree","v","handleLeftFilter","handleRightFilter","handleRightClear","nodes","leftFilter","rightFilter","getFlatTreeData","listStyle","listRender","treeRender","cls","TransferTreeControlled","getFieldDecorator","zIndex","iframe","iframeCSSLinks","uploader","insertImageAsBase64URI","buttons","buttonsMD","buttonsSM","buttonsXS","toolbarButtonSize","events","afterInit","editor","contentDocument","getElementsByTagName","setAttribute","href","script","head","Editor","html","_onChange","defaultConfig","tabIndex","EditorControlled","dangerouslySetInnerHTML","__html","getList_MEDIA","path","axios","get","params","save_MEDIA","payload","post","success","delete_MEDIA","delete","lastModified","detail","areYouSure","nameFolder","pleaseEnterNameFolder","onlyLettersAndDigitsAllowed","link","pleaseEnterNameLink","incorrectPathFormat","myFile","outsideLink","createFolder","uploadFile","upload","upToFolder","multiImages","addImages","TabPane","Tabs","MediaManagement","getList","slice","origin","button","visibleDraw","multi","images","onHide","limit","Authorization","getStore","token","listType","percent","formOutsideProps","defaultActiveKey","tab","paddingBottom","bodyStyle","padding","textAlign","hoverable","count","cover","alt","src","block","MediaControlled","newUrl","JSON","stringify","parse","propsMedia"],"mappings":"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","file":"static/js/3.4977de1c.chunk.js","sourcesContent":["import PageInfo from './PageInfo';\nimport config from '@/config';\n\n/**\n * Universal paging assistant\n */\nexport default class　PageHelper {\n  static create = () => {\n    const pageInfo = new PageInfo();\n    return pageInfo;\n  }\n\n  /**\n   * You can format the parameters sent to the backend by setting this function\n   * \n   * For example, the parameters required by the back-end paging interface are\n   * {\n   *    currentPage: 1, \n   *    showCount: 10, \n   *    paramMap: {name: 'jonn'}\n   * }\n   * The paging information can be formatted by setting this parameter\n   * E.g:\n   * pageHelper.requestFormat(({pageNum, pageSize}) => ({\n   *  currentPage: pageNum,\n   *  showCount: pageSize\n   * }))\n  */\n  static requestFormat(pageInfo) {\n    return config.pageHelper.requestFormat(pageInfo);\n  };\n   \n\n  /**\n   * Format the data returned from the server and place it in the PageInfo object,\n   * Prepare for the next: page\n   * Page number: pageNum;\n     Quantity per page: pageSize;\n     Current page number: size;\n     Total: total;\n     Yotal pages: totalPages;\n     Result set: list;\n   * @param {object} resp \n  */\n  static responseFormat(resp) {\n    return config.pageHelper.responseFormat(resp);\n  }\n\n  static URLToArray(url) {\n    const _request = {};\n    const _pairs = url.substring(url.indexOf('?') + 1).split('&');\n    for (var i = 0; i < _pairs.length; i++) {\n        if(!_pairs[i])\n            continue;\n        var _pair = _pairs[i].split('=');\n        _request[decodeURIComponent(_pair[0])] = decodeURIComponent(_pair[1]);\n    }\n    return _request;\n  }\n}","import DataTable, { Tip, Oper, Paging } from './DataTable';\nimport { Editable, EditableOper } from './Editable';\nexport { Tip, Oper, Paging, Editable, EditableOper };\nexport default DataTable;\n","export const scope = 'components.Form';\n\nexport default {\n  submit: {\n    id: `${scope}.submit`,\n    defaultMessage: 'Submit',\n  },\n  reset: {\n    id: `${scope}.reset`,\n    defaultMessage: 'Reset',\n  },\n  twoPasswords: {\n    id: `${scope}.twoPasswords`,\n    defaultMessage: 'The two passwords are inconsistent!',\n  },\n  twoInput: {\n    id: `${scope}.twoInput`,\n    defaultMessage: 'Two inputs need to be consistent',\n  },\n  chosen: {\n    id: `${scope}.chosen`,\n    defaultMessage: 'Chosen',\n  },\n  item: {\n    id: `${scope}.item`,\n    defaultMessage: 'Item',\n  },\n  source: {\n    id: `${scope}.source`,\n    defaultMessage: 'Source',\n  },\n  clickUpload: {\n    id: `${scope}.clickUpload`,\n    defaultMessage: 'Click to upload',\n  },\n  aims: {\n    id: `${scope}.aims`,\n    defaultMessage: 'aims',\n  },\n  popoverPassword: {\n    id: `${scope}.popoverPassword`,\n    defaultMessage: 'Please enter at least 6 characters. Please do not use easy-to-guess passwords.',\n  },\n  strong: {\n    id: `${scope}.strong`,\n    defaultMessage: 'Strength: Strong',\n  },\n  medium: {\n    id: `${scope}.medium`,\n    defaultMessage: 'Strength: Medium',\n  },\n  short: {\n    id: `${scope}.short`,\n    defaultMessage: 'Strength: too short',\n  },\n  passwordMin: {\n    id: `${scope}.passwordMin`,\n    defaultMessage: 'Password at least 6 digits, case sensitive.',\n  },\n  pleaseEnter: {\n    id: `${scope}.pleaseEnter`,\n    defaultMessage: 'Plesae enter',\n  },\n  cancel: {\n    id: `${scope}.cancel`,\n    defaultMessage: 'Cancel',\n  },\n  save: {\n    id: `${scope}.save`,\n    defaultMessage: 'Save',\n  },\n};\n","export const scope = 'components.DataTable';\n\nexport default {\n  search: {\n    id: `${scope}.search`,\n    defaultMessage: 'Search',\n  },\n  reset: {\n    id: `${scope}.reset`,\n    defaultMessage: 'Reset',\n  },\n  total: {\n    id: `${scope}.total`,\n    defaultMessage: 'Total',\n  },\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Table, Pagination, Tooltip, Input, Button, DatePicker, Checkbox, Radio } from 'antd';\nimport objectAssign from 'object-assign';\nimport $$ from 'cmn-utils';\nimport cx from 'classnames';\nimport isEqual from 'react-fast-compare';\nimport moment from 'moment';\nimport intl from 'react-intl-universal';\n\nimport messages from './messages';\nimport { EditableCell } from './Editable';\nimport './style/index.less';\n\nconst { RangePicker } = DatePicker;\nconst CheckboxGroup = Checkbox.Group;\nconst RadioboxGroup = Radio.Group;\n\n/**\n * Data table\n */\nclass DataTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedRowKeys: props.selectedRowKeys,\n      selectedRows: this.getSelectedRows(props.selectedRowKeys),\n      tableHeight: null\n    };\n  }\n\n  // Convert value to object array\n  getSelectedRows(value, oldValue = [], rowKey) {\n    if (value) {\n      return value.map(item => {\n        if (typeof item === 'object') {\n          return item;\n        } else {\n          const oldv = oldValue.filter(jtem => jtem[rowKey] === item)[0];\n          return oldv || { [rowKey]: item };\n        }\n      });\n    }\n    return [];\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (!isEqual(prevProps.selectedRowKeys, this.props.selectedRowKeys)) {\n      this.setState({\n        selectedRowKeys: this.props.selectedRowKeys,\n        selectedRows: this.getSelectedRows(\n          this.props.selectedRowKeys,\n          prevState.selectedRows,\n          this.props.rowKey\n        )\n      });\n    }\n  }\n\n  searchInput = {};\n\n  tableOnRow = (record, index) => {\n    const { selectType } = this.props;\n\n    let keys = selectType === 'radio' ? [] : this.state.selectedRowKeys || [];\n    let rows = selectType === 'radio' ? [] : this.state.selectedRows || [];\n\n    let i = keys.indexOf(record[this._rowKey]);\n    if (i !== -1) {\n      keys.splice(i, 1);\n      rows.splice(i, 1);\n    } else {\n      keys.push(record[this._rowKey]);\n      rows.push(record);\n    }\n\n    this.onSelectChange([...keys], [...rows]);\n  };\n\n  onSelectChange = (selectedRowKeys, newSelectedRows) => {\n    // Use the keys to re-filter the rows based on the key, solve the problem of keys and rows are not synchronized\n    // and add a rowKey field to each line\n    const selectedRows = newSelectedRows.filter(\n      item => item ? selectedRowKeys.indexOf(item[this._rowKey]) !== -1 : false\n    );\n\n    this.setState({ selectedRowKeys, selectedRows }, () => {\n      newSelectedRows = newSelectedRows.filter(item => !!item);\n      this.props.onSelect && this.props.onSelect(selectedRowKeys, newSelectedRows);\n    });\n  };\n\n  handleTableChange = (pagination, filters, sorts) => {\n    let { pageNum, pageSize } = this.props.dataItems\n\n    if (pagination.current) {\n      pageNum = pagination.current;\n      pageSize = pagination.pageSize;\n    }\n\n    let sortMap = sorts.field\n      ? {\n          [sorts.field]: sorts.order\n        }\n      : sorts;\n\n    Object.keys(filters).forEach(key => {\n      if (filters[key] === null) {\n        delete filters[key];\n      }\n    });\n\n    this.props.onChange &&\n      this.props.onChange({ pageNum, pageSize, filters, sorts: sortMap });\n  };\n\n  onShowSizeChange = (pageNum, pageSize) => {\n    const { filters, sorts } = this.props.dataItems\n    console.log(\"onShowSizeChange\", pageNum, pageSize)\n    this.props.onChange && this.props.onChange({ pageNum, pageSize, filters, sorts });\n  };\n\n  getColumnSearchInput = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div>\n        <Input\n          ref={node => {\n            this.searchInput[dataIndex] = node;\n          }}\n          placeholder={`${intl.formatMessage(messages.search)} ${dataIndex}`}\n          value={selectedKeys}\n          onChange={e => setSelectedKeys(e.target.value)}\n          onPressEnter={() => confirm()}\n        />\n        <Button onClick={() => {\n          clearFilters()\n          setTimeout(() => clearFilters())\n        }} size=\"small\">\n          {intl.formatMessage(messages.reset)}\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => confirm()}\n          icon={<i className=\"las la-search\" />}\n          size=\"small\"\n        >\n          {intl.formatMessage(messages.search)}\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <i className=\"las la-search\" style={{ color: filtered ? '#5d78ff' : undefined }} />\n    ),\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput[dataIndex].select());\n      }\n    }\n  });\n\n  getColumnSearchDate = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => {\n      const dateRangePicker = selectedKeys.length > 0 ? [moment(selectedKeys[0]), moment(selectedKeys[1])] : [];\n      return (\n        <div>\n          <RangePicker\n            ref={node => {\n              this.searchInput[dataIndex] = node;\n            }}\n            value={dateRangePicker}\n            onChange={e => setSelectedKeys(e)}\n          />\n          <Button\n            onClick={() => {\n              clearFilters()\n              setTimeout(() => clearFilters())\n            }}\n            size=\"small\">\n            {intl.formatMessage(messages.reset)}\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={() => confirm()}\n            icon={<i className=\"las la-search\" />}\n            size=\"small\"\n          >\n            {intl.formatMessage(messages.search)}\n          </Button>\n        </div>\n      )\n    },\n    filterIcon: filtered => (\n      <i className=\"las la-calendar\" style={{ color: filtered ? '#5d78ff' : undefined }} />\n    )\n  });\n\n  getColumnSearchCheckbox = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters, filters }) => {\n      return (\n        <div>\n          <CheckboxGroup\n            options={filters.map(item => { return { label: item.codeName, value: item.code }})}\n            value={selectedKeys}\n            onChange={e => setSelectedKeys(e)}\n          />\n          <Button onClick={() => {\n            clearFilters()\n            setTimeout(() => clearFilters())\n          }} size=\"small\">\n            {intl.formatMessage(messages.reset)}\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={() => confirm()}\n            icon={<i className=\"las la-search\" />}\n            size=\"small\"\n          >\n            {intl.formatMessage(messages.search)}\n          </Button>\n        </div>\n      )\n    },\n    filterIcon: filtered => (\n      <i className=\"las la-check-square\" style={{ color: filtered ? '#5d78ff' : undefined }} />\n    ),\n  });\n\n  getColumnSearchRadiobox = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters, filters }) => {\n      return (\n        <div>\n          <RadioboxGroup\n            options={filters.map(item => { return { label: item.codeName, value: item.code }})}\n            value={selectedKeys}\n            onChange={e => setSelectedKeys(e.target.value)}\n          />\n          <Button onClick={() => {\n            clearFilters()\n            setTimeout(() => clearFilters())\n          }} size=\"small\">\n            {intl.formatMessage(messages.reset)}\n          </Button>\n          <Button\n            type=\"primary\"\n            onClick={() => confirm()}\n            icon={<i className=\"las la-search\" />}\n            size=\"small\"\n          >\n            {intl.formatMessage(messages.search)}\n          </Button>\n        </div>\n      )\n    },\n    filterIcon: filtered => (\n      <i className=\"las la-dot-circle\" style={{ color: filtered ? '#5d78ff' : undefined }} />\n    ),\n  });\n\n  render() {\n    const {\n      prefixCls,\n      className,\n      columns,\n      dataItems,\n      showNum,\n      alternateColor,\n      onChange,\n      selectType,\n      rowSelection,\n      isScroll,\n      pagination,\n      rowKey,\n      ...otherProps\n    } = this.props;\n\n    let classname = cx(prefixCls, className, {\n      'table-row-alternate-color': alternateColor\n    });\n\n    let colRowKey = '';\n    let hasLeftFixedCol = false; // Is there a fixed column on the left\n    // Default width\n    let cols = columns\n      .filter(col => {\n        if (col.primary) colRowKey = col.name;\n        return !!col.tableItem;\n      })\n      .map(col => {\n        let item = col.tableItem;\n        // Select dictionary enhancement\n        if (col.dict && !item.render) {\n          item.render = (text, record) => {\n            return (\n              col.dict &&\n              col.dict\n                .filter(dic => dic.code === text)\n                .map(dic => dic.codeName)[0]\n            );\n          };\n        }\n        // Is there a fixed column on the left\n        if (item.fixed === true || item.fixed === 'left') {\n          hasLeftFixedCol = true;\n        }\n        // Renders this column with the specified type if the type field is specified\n        const myRender = item.render;\n        if (item.type) {\n          item.render = (text, record, index) => {\n            if ($$.isFunction(item.editing) && item.editing(text, record)) {\n              return (\n                <EditableCell\n                  text={text}\n                  record={record}\n                  index={index}\n                  field={col}\n                />\n              );\n            } else {\n              return $$.isFunction(myRender)\n                ? myRender(text, record, index)\n                : text;\n            }\n          };\n        }\n\n        switch (item.filterType) {\n          case \"datetime\":\n            item = {...item, ...this.getColumnSearchDate(col.name)}\n            break;\n          case \"input\":\n            item = {...item, ...this.getColumnSearchInput(col.name)}\n            break;\n          case \"checkbox\":\n            item = {...item, ...this.getColumnSearchCheckbox(col.name)}\n            break;\n          case \"radiobox\":\n            item = {...item, ...this.getColumnSearchRadiobox(col.name)}\n            break;\n          default:\n        }\n\n        return {\n          title: col.title,\n          dataIndex: col.name,\n          ...item\n        };\n      })\n\n    // Show line number\n    if (showNum) {\n      cols.unshift({\n        title: 'Number',\n        width: 50,\n        dataIndex: '_num',\n        ...(hasLeftFixedCol && { fixed: 'left' }),\n        render(text, record, index) {\n          const { pageNum, pageSize } = dataItems;\n          if (pageNum && pageSize) {\n            return (pageNum - 1) * pageSize + index + 1;\n          } else {\n            // No pagination\n            return index + 1;\n          }\n        }\n      });\n    }\n\n    // Pagination\n    const paging = objectAssign(\n      {\n        total: dataItems.total,\n        pageSize: dataItems.pageSize,\n        showSizeChanger: true,\n        showQuickJumper: true,\n        showTotal: total => `total ${total} article`,\n        // onShowSizeChange: this.onShowSizeChange\n      },\n      dataItems.pageNum && { current: dataItems.pageNum },\n      pagination\n    );\n\n    const _rowSelection = {\n      type: selectType === 'radio' ? 'radio' : 'checkbox',\n      selectedRowKeys: this.state.selectedRowKeys,\n      onChange: this.onSelectChange,\n      ...rowSelection\n    };\n\n    this._rowKey = rowKey || colRowKey;\n\n    return (\n      <div className={classname}>\n        <Table\n          rowSelection={selectType ? _rowSelection : null}\n          onRow={\n            selectType\n              ? (record, index) => ({\n                  onClick: _ => this.tableOnRow(record, index)\n                })\n              : () => {}\n          }\n          scroll={isScroll ? objectAssign({ x: true, scrollToFirstRowOnChange: true }, isScroll) : {}}\n          // bodyStyle={{ overflowX: 'auto' }}\n          columns={cols}\n          pagination={pagination ? paging : false}\n          dataSource={dataItems.list}\n          onChange={this.handleTableChange}\n          rowKey={this._rowKey}\n          {...otherProps}\n        />\n      </div>\n    );\n  }\n}\n\n/**\n * Operating area, preventing upward bubbling\n */\nexport const Oper = prop => (\n  <div className=\"table-row-button\" onClick={e => e.stopPropagation()}>\n    {prop.children}\n  </div>\n);\n\nexport const Tip = prop => (\n  <Tooltip placement=\"topLeft\" title={prop.children}>\n    <div className=\"nobr\" style={prop.style}>\n      {prop.children}\n    </div>\n  </Tooltip>\n);\n\nexport const Paging = ({ dataItems, onChange, ...otherProps }) => {\n  const { total, pageSize, pageNum, filters, sorts } = dataItems;\n  const paging = {\n    total: total,\n    pageSize: pageSize,\n    current: pageNum,\n    showSizeChanger: true,\n    showQuickJumper: true,\n    showTotal: total => `${intl.formatMessage(messages.total)} ${total}`,\n    onShowSizeChange: (pageNum, pageSize) => onChange({ pageNum, pageSize, filters, sorts }),\n    onChange: pageNum => onChange({ pageNum, pageSize, filters, sorts }),\n    ...otherProps\n  };\n  return <Pagination {...paging} />;\n};\n\nDataTable.Oper = Oper;\nDataTable.Pagination = Paging;\nDataTable.Tip = Tip;\n\nDataTable.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  rowKey: PropTypes.string,\n  /**\n   * See the help document column.js usage for details\n   */\n  columns: PropTypes.array.isRequired,\n  /**\n   * The data object list is required. If you need paging in the form, you need to provide paging information here {pageNum: 1, list: [], filters: {}, pageSize: 10, total: 12}\n   */\n  dataItems: PropTypes.object.isRequired,\n  /**\n   * Whether to display the line number\n   */\n  showNum: PropTypes.bool,\n  /**\n   * Whether the odd and even rows are different colors\n   */\n  alternateColor: PropTypes.bool,\n  /**\n   * Multi-select / single-select, checkbox or radio\n   */\n  selectType: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  /**\n   * Configuration of selection function Refer to antd's rowSelection configuration item\n   */\n  rowSelection: PropTypes.object,\n  /**\n   * Specifies the key array of the selected item\n   */\n  selectedRowKeys: PropTypes.array,\n  /**\n   * Whether to bring scroll bar, or as a scroll parameter\n   */\n  isScroll: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  /**\n   * Whether to add pagination in the form\n   */\n  pagination: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  /**\n   * Selected table row callback function (selectedRowKeys, selectedRows)\n   */\n  onSelect: PropTypes.func,\n  /**\n   * External data acquisition interface {pageNum: 1, filters: {}, pageSize: 10}\n   */\n  onChange: PropTypes.func\n};\n\nDataTable.defaultProps = {\n  prefixCls: 'antui-datatable',\n  alternateColor: true\n};\n\nexport default DataTable;\n","import React from 'react';\nimport { Input } from 'antd';\nimport $$ from 'cmn-utils';\n\nconst { TextArea } = Input;\n/**\n * Text box component\n */\nexport default ({\n  name,\n  formFieldOptions = {},\n  defaultValue,\n  normalize,\n  rules,\n  onBlur,\n  form,\n  type,\n  preview,\n  placeholder,\n  getPopupContainer,\n  ...otherProps\n}) => {\n\n  let initval = defaultValue;\n\n  // If there is an initial value\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.defaultValue = normalize(initval);\n    } else {\n      formFieldOptions.defaultValue = initval;\n    }\n  }\n\n  if (preview) {\n    if (type === 'hidden') return null;\n    return <div style={otherProps.style}>{initval || ''}</div>;\n  }\n\n  // If there are rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  // If you need onChange\n  if (typeof onBlur === 'function') {\n    otherProps.onBlur = e => onBlur(e, form); // value, event\n  }\n\n  const Comp = type === 'textarea' ? TextArea : Input;\n\n  delete otherProps.render;\n\n  const props = {\n    autoComplete: 'off',\n    type,\n    placeholder: placeholder || `Please enter ${otherProps.title}`,\n    ...otherProps\n  };\n\n  return <Comp {...props} />;\n};\n","import React from 'react';\nimport { Modal } from 'antd';\nimport $$ from 'cmn-utils';\nimport config from '@/config';\n\nclass BaseComponent extends React.Component {\n  notice = config.notice; // notification\n\n  /**\n   * History api route jump\n   */\n  get history() { \n    return this.props.history;\n  }\n\n  /**\n   * New\n   */\n  onAdd = () => {\n    this.setState({\n      record: null,\n      visible: true\n    });\n  };\n\n  /**\n   * Modify\n   * @param {object} Form record\n   */\n  onUpdate = record => {\n    this.setState({\n      record,\n      visible: true\n    });\n  };\n\n  /**\n   * Delete\n   * @param {object | array} Form records, an array when deleting in bulk\n   */\n  onDelete = record => {\n    if (!record) return;\n    if ($$.isArray(record) && !record.length) return;\n\n    const content = `Do you want to delete this ${\n      $$.isArray(record) ? record.length : ''\n    } item?`;\n\n    Modal.confirm({\n      title: 'Note',\n      content,\n      onOk: () => {\n        this.handleDelete($$.isArray(record) ? record : [record]);\n      },\n      onCancel() {}\n    });\n  };\n\n  handleAdd() {\n    /* Subclass rewriting */\n  }\n  handleUpdate() {\n    /* Subclass rewriting */\n  }\n  handleDelete(records) {\n    /* Subclass rewriting */\n  }\n}\n\nexport default BaseComponent;\n","import React from 'react';\nimport { Form } from 'antd';\nimport omit from 'object.omit';\nimport PropTypes from 'prop-types';\n\nimport DataTable, { Oper } from './DataTable';\n\nconst EditableContext = React.createContext();\n\nconst Editable = ({ form, ...props }) => {\n  return (\n    <EditableContext.Provider value={form}>\n      <DataTable {...props} />\n    </EditableContext.Provider>\n  )\n};\n\n/**\n * Repacking Oper in order to pass form to subcomponent\n * E.g\n *  <EditableOper>\n      {\n        form => <a onClick={e => onSave(form)}>save</a>\n      }\n    </EditableOper>\n */\nconst EditableOper = props => (\n  <EditableContext.Consumer>\n    {form => <Oper>{props.children(form)}</Oper>}\n  </EditableContext.Consumer>\n);\n\n/**\n * Editable component\n * Change the presentation of the current table Cell by returning a component\n * @param text The text content in the current cell\n * @param record [Object] Contains a row of data for the current cell\n * @param field [Object] This column in the columns\n * @param field.tableItem.editing [Function] Use functions to support specified cell application types that satisfy the condition\n */\nclass EditableCell extends React.Component {\n  componentDidMount() {\n    // Reset the form item, otherwise it will bring the value to the next line\n    const { record, field } = this.props;\n    if (record && record[field.name]) {\n      this.form.setFieldsValue({\n        [field.name]: record[field.name]\n      });\n    }\n  }\n\n  render() {\n    const { record, text, field } = this.props;\n    const { tableItem } = field;\n    const { type } = tableItem;\n\n    return (\n      <EditableContext.Consumer>\n        {form => {\n          if (!form) {\n            console.warn('Please use Editable instead of DataTable');\n            return text;\n          }\n          if (!this.form) this.form = form;\n          let formProps = {\n            form,\n            name: field.name,\n            title: field.title,\n            record,\n            ...tableItem\n          };\n          if (field.dict) {\n            formProps.dict = field.dict;\n          }\n          formProps = omit(formProps, ['editing', 'render']);\n          return (\n            <Form.Item\n              className=\"editable-form-item\"\n              {...formProps}\n              validateTrigger={['onChange', 'onBlur']}\n            >\n              {require(`../Form/model/${type.toLowerCase()}`).default(\n                formProps\n              )}\n            </Form.Item>\n          );\n        }}\n      </EditableContext.Consumer>\n    );\n  }\n}\n\nEditableCell.propTypes = {\n  record: PropTypes.object,\n  field: PropTypes.object,\n  text: PropTypes.any,\n};\n\nexport { Editable, EditableCell, EditableOper };\n","import React from 'react';\nimport { DatePicker, TimePicker } from 'antd';\nimport $$ from 'cmn-utils';\nimport moment from 'moment';\n\nconst { MonthPicker, RangePicker } = DatePicker;\nconst { RangePicker: RangePickerTime } = TimePicker;\n\n/**\n * Date, time component\n */\nexport default ({\n  name,\n  form,\n  type,\n  record,\n  defaultValue,\n  rules,\n  formFieldOptions = {},\n  format,\n  onChange,\n  normalize,\n  preview,\n  getPopupContainer,\n  ...otherProps\n}) => {\n\n  let initval = defaultValue;\n\n  if (record) {\n    initval = record[name];\n  }\n\n  // If there is an initial value\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.defaultValue = normalize(initval);\n    } else {\n      if ($$.isArray(initval)) {\n        formFieldOptions.defaultValue = initval.map(item => moment.isMoment(item) ? item : moment(item))\n      } else {\n        formFieldOptions.defaultValue = moment.isMoment(initval) ? initval : moment(initval);\n      }\n    }\n  } else {\n    formFieldOptions.defaultValue = null;\n  }\n\n  // If there are rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  let Component = DatePicker;\n\n  const props = {\n    ...otherProps\n  };\n\n  if (getPopupContainer) {\n    props.getCalendarContainer = getPopupContainer;\n  }\n\n  switch (type) {\n    case 'date':\n      break;\n    case 'datetime':\n      break;\n    case 'date~':\n      Component = RangePicker;\n      break;\n    case 'month':\n      Component = MonthPicker;\n      break;\n    case 'time':\n      Component = TimePicker;\n      break;\n    case 'time~':\n      Component = RangePickerTime\n      break;\n    default:\n      break;\n  }\n\n  // If you need onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = (date, dateString) =>\n      onChange(form, date, dateString);\n  }\n\n  if (format) props.format = format;\n  else if (type === 'month') props.format = 'YYYY-MM';\n  else if (type === 'datetime' || type === 'date~')\n    props.format = 'YYYY-MM-DD HH:mm:ss';\n  else if (type === 'time' || type === 'time~') props.format = 'HH:mm:ss';\n  else props.format = 'YYYY-MM-DD';\n\n  if (preview) {\n    return (\n      <div style={otherProps.style}>\n        {initval ? formFieldOptions.initialValue.format(props.format) : ''}\n      </div>\n    );\n  }\n\n  return <Component {...props} />;\n};\n","export const scope = 'components.Modal';\n\nexport default {\n  edit: {\n    id: `${scope}.edit`,\n    defaultMessage: 'Edit',\n  },\n  new: {\n    id: `${scope}.new`,\n    defaultMessage: 'New',\n  },\n  cancel: {\n    id: `${scope}.cancel`,\n    defaultMessage: 'Cancel',\n  },\n  save: {\n    id: `${scope}.save`,\n    defaultMessage: 'Save',\n  },\n\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button } from 'antd';\nimport cx from 'classnames';\nimport intl from 'react-intl-universal';\nimport omit from 'object.omit';\n\nimport Form from 'components/Form';\nimport messages from './messages';\n\nimport './style/index.less';\n\nclass ModalForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.visible !== prevState.visible) {\n      return {\n        visible: nextProps.visible\n      };\n    }\n    return null;\n  }\n\n  closeModal = () => {\n    if (this.props.onCancel) {\n      this.props.onCancel();\n      return;\n    }\n    this.setState({\n      visible: false\n    });\n  };\n\n  onSubmit = async () => {\n    const { record, onSubmit } = this.props;\n    const form = this.refs.form.refs.form\n    try {\n      const values = await form.validateFields();\n      onSubmit && onSubmit(values, record);\n    } catch (errorInfo) {\n      console.log('Failed:', errorInfo);\n    }\n  };\n\n  render() {\n    const {\n      title,\n      record,\n      className,\n      columns,\n      onCancel,\n      onSubmit,\n      modalOpts,\n      formOpts,\n      loading,\n      full,\n    } = this.props;\n\n    const classname = cx(className, 'antui-modalform', { 'full-modal': full });\n    const modalProps = {\n      className: classname,\n      visible: this.state.visible,\n      style: { top: 20 },\n      title: title || (record ? intl.formatMessage(messages.edit) :  intl.formatMessage(messages.new)),\n      // maskClosable: true,\n      destroyOnClose: true,\n      onCancel: this.closeModal,\n      footer: [\n        onCancel && (\n          <Button key=\"back\" onClick={this.closeModal}>\n            {intl.formatMessage(messages.cancel)}\n          </Button>\n        ),\n        onSubmit && (\n          <Button key=\"submit\" type=\"primary\" onClick={this.onSubmit} loading={loading}>\n            {intl.formatMessage(messages.save)}\n          </Button>\n        )\n      ],\n      ...modalOpts\n    };\n    const _columns = columns.map(item => omit(item, [\n      'tableItem',\n      'searchItem',\n    ]))\n    const formProps = {\n      columns: _columns,\n      onSubmit,\n      record,\n      footer: false,\n      formItemLayout: {\n        labelCol: { span: 24 },\n        wrapperCol: { span: 24 }\n      },\n      ...formOpts\n    };\n\n    return (\n      <Modal {...modalProps}>\n        <Form ref=\"form\" {...formProps} />\n      </Modal>\n    );\n  }\n}\n\nModalForm.propTypes = {\n  title: PropTypes.string,\n  record: PropTypes.object,\n  visible: PropTypes.bool,\n  loading: PropTypes.bool,\n  full: PropTypes.bool,\n  preview: PropTypes.bool,\n  columns: PropTypes.array,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func,\n  modalOpts: PropTypes.object,\n  formOpts: PropTypes.object,\n  className: PropTypes.string\n};\n\nexport default ModalForm;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport $$ from 'cmn-utils';\nimport assign from 'object-assign';\n\nimport PageHelper from '@/utils/pageHelper';\nimport DataTable from './DataTable';\n\nconst { Pagination } = DataTable;\n\n/**\n * Asynchronously loaded table in loadData style\n */\nclass LoadTable extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      value: [],\n      rows: [],\n      dataSource: PageHelper.create()\n    };\n  }\n\n  componentDidMount() {\n    const { loadData } = this.props;\n    if (loadData) {\n      this.onChange({ pageNum: 1 });\n    }\n  }\n\n  // Convert values to object array\n  static getRows(value, oldValue = [], props) {\n    const { rowKey } = props;\n    if (value) {\n      return value.map(item => {\n        const oldv = oldValue.filter(jtem => jtem[rowKey] === item)[0];\n        return typeof item === 'object' ? item : oldv || { [rowKey]: item };\n      });\n    }\n    return [];\n  }\n\n  static getKeys(value, props) {\n    const { rowKey } = props;\n    if (value) {\n      return value.map(item => ($$.isObject(item) ? item[rowKey] : item));\n    }\n    return [];\n  }\n\n  onSelect = (keys, rows) => {\n    const { onChange } = this.props;\n    this.setState({ value: keys, rows });\n\n    if (onChange) {\n      onChange(keys, rows);\n    }\n  };\n\n  async onChange({ pageNum, pageSize }) {\n    const { loadData } = this.props;\n    const { dataSource } = this.state;\n\n    if (loadData) {\n      const newDataSource = await loadData(\n        dataSource.jumpPage(pageNum, pageSize)\n      );\n\n      this.setState({\n        dataSource: assign(dataSource, newDataSource)\n      });\n    }\n  }\n\n  onSelectChange = (value, option) => {\n    const { rowKey, onChange } = this.props;\n    const { rows } = this.state;\n    const newRows = rows.filter(item => value.indexOf(item[rowKey]) !== -1);\n    this.setState({\n      value,\n      rows: newRows\n    });\n    onChange && onChange(value, newRows);\n  };\n\n  render() {\n    const {\n      columns,\n      rowKey,\n      selectType,\n      showNum,\n      pagination,\n      paginationContainer,\n      dataItems,\n    } = this.props;\n    const { value } = this.state;\n    // dataSource\n    const dataTableProps = {\n      columns,\n      rowKey,\n      dataItems: dataItems,\n      selectedRowKeys: value,\n      selectType: typeof selectType === 'undefined' ? 'checkbox' : selectType,\n      showNum: typeof showNum === 'undefined' ? true : showNum,\n      isScroll: true,\n      onChange: ({ pageNum, pageSize }) => this.onChange({ pageNum, pageSize }),\n      onSelect: (keys, rows) => this.onSelect(keys, rows),\n      pagination:\n        pagination === false\n          ? false\n          : {\n              showSizeChanger: false,\n              showQuickJumper: false,\n              ...pagination\n            }\n    };\n\n    if (paginationContainer) {\n      ReactDOM.createPortal(\n        pagination === false ? null : (\n          <Pagination\n            key=\"paging\"\n            size=\"small\"\n            showSizeChanger={false}\n            showQuickJumper={false}\n            {...dataTableProps}\n          />\n        ),\n        paginationContainer\n      );\n    }\n\n    return <DataTable {...dataTableProps} />;\n  }\n}\n\nLoadTable.propTypes = {\n  rowKey: PropTypes.string,\n  columns: PropTypes.array,\n  value: PropTypes.array,\n  dataSource: PropTypes.object,\n  onChange: PropTypes.func,\n  loadData: PropTypes.func\n}\n\nLoadTable.defaultProps = {\n  rowKey: 'id'\n}\n\nexport default LoadTable;\n","export const scope = 'components.SearchBar';\n\nexport default {\n  titleButtonTop: {\n    id: `${scope}.titleButtonTop`,\n    defaultMessage: 'Inquire',\n  },\n  titleButtonBottom: {\n    id: `${scope}.titleButtonBottom`,\n    defaultMessage: 'Reset',\n  },\n  errors: {\n    id: `${scope}.errors`,\n    defaultMessage: 'Special characters cannot be included in the query condition',\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, message, Form } from 'antd';\nimport cx from 'classnames';\nimport $$ from 'cmn-utils';\nimport intl from \"react-intl-universal\";\n\nimport messages from './messages';\nimport './style/index.less';\n\nconst PlainComp = ({ className, children }) => (\n  <div className={className}>{children}</div>\n);\nPlainComp.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node\n};\n/**\n * Search bar\n */\nclass SearchBar extends React.Component {\n  // When type is grid, specify the number of elements in each row\n  cols = {\n    xs: 8,\n    md: 6,\n    xl: 4\n  };\n\n  // Inline element default width\n  width = {\n    date: 100,\n    month: 100,\n    'date~': 210,\n    datetime: 140,\n    select: 100,\n    default: 110,\n    treeSelect: 110,\n    cascade: 110,\n    cascader: 110\n  };\n\n  // When the type is grid, specify the interval between every two elements\n  rows = {\n    gutter: 8\n  };\n\n  resetForm(e) {\n    this.refs.form.resetFields();\n    this.searchForm(true);\n  }\n\n  async searchForm(isReset) {\n    try {\n      const values = await this.refs.form.validateFields()\n      this.props.onSearch && this.props.onSearch(values, isReset);\n    } catch (errors) {\n      let errs = [];\n      Object.keys(errors).forEach(fieldName => {\n        errs = errors[fieldName].errors || [];\n      });\n      if (errs && errs.length) message.error(errs[0].message);\n    }\n  }\n\n  render() {\n    const {\n      className,\n      prefixCls,\n      type,\n      rows,\n      cols,\n      columns,\n      group,\n      children,\n      form,\n      appendTo,\n      record,\n      ...otherProps\n    } = this.props;\n\n    const colopts = type === 'grid' ? cols || this.cols : {};\n    const rowopts = type === 'grid' ? rows || this.rows : {};\n\n    let ComponentRow = type === 'inline' ? PlainComp : Row;\n    let ComponentCol = type === 'inline' ? PlainComp : Col;\n    let ComponentItem = Form.Item;\n    const formItemLayout =\n      type === 'grid'\n        ? {\n            labelCol: { span: 8 },\n            wrapperCol: { span: 16 }\n          }\n        : {};\n\n    let ComponentBtnGroup = type === 'inline' ? Button.Group : PlainComp;\n\n    let searchFields = columns.filter(col => col.searchItem);\n    searchFields = group\n      ? searchFields.filter(\n          col => col.searchItem && col.searchItem.group === group\n        )\n      : searchFields;\n\n    if (!searchFields.length) return null;\n\n    delete otherProps.onSearch;\n\n    let getPopupContainer = null;\n    if (appendTo) {\n      if ($$.isFunction(appendTo)) getPopupContainer = appendTo;\n      else if (appendTo === true)\n        getPopupContainer = triggerNode => triggerNode.parentNode;\n      else getPopupContainer = _ => appendTo;\n    }\n\n    return (\n      <div className={cx(prefixCls, className)} {...otherProps}>\n        <Form\n          ref=\"form\"\n          initialValues={record}\n          className={cx({\n            'form-inline': type === 'inline',\n            'form-grid': type === 'grid'\n          })}\n        >\n          <ComponentRow className=\"row-item\" {...rowopts}>\n            {searchFields.map((field, i) => {\n              let col = { ...colopts };\n              if (type === 'grid' && field.searchItem.col) {\n                col = field.searchItem.col;\n              } else if (type !== 'grid') {\n                col = {};\n              }\n\n              const fieldType = field.searchItem.type || 'input';\n\n              const formProps = {\n                form: this.refs,\n                name: field.name,\n                title: field.title,\n                record,\n                ...field.searchItem\n              };\n\n              if (type === 'inline') {\n                formProps.style = {\n                  width: formProps.width || this.width[fieldType]\n                };\n              }\n\n              if (getPopupContainer) {\n                formProps.getPopupContainer = getPopupContainer;\n              }\n\n              if (field.dict) {\n                formProps.dict = field.dict;\n              }\n\n              let FieldComp;\n              switch (fieldType) {\n                case 'date~': // Date range\n                case 'datetime': // Date time\n                case 'date': // Date\n                case 'month': // Month\n                case 'time': // Time\n                  FieldComp = require(`../Form/model/date`).default(formProps);\n                  break;\n                case 'input': // Input box\n                case 'textarea': // Multi-line text\n                  formProps.autoComplete = 'off';\n                  FieldComp = require(`../Form/model/input`).default(formProps);\n                  break;\n                case 'hidden': // Hidden domain\n                  return (\n                    <span key={`col-${i}`}>\n                      {require(`../Form/model/input`).default(formProps)}\n                    </span>\n                  );\n                default:\n                  // General purpose\n                  FieldComp = require(`../Form/model/${fieldType.toLowerCase()}`).default(\n                    formProps\n                  );\n              }\n\n              return (\n                <ComponentCol key={`col-${i}`} className=\"col-item\" {...col}>\n                  <ComponentItem\n                    {...formItemLayout}\n                    {...formProps}\n                    label={field.title}\n                    name={field.name}\n                    noStyle={type === 'inline'}\n                    className=\"col-item-content\"\n                  >\n                    {FieldComp}\n                  </ComponentItem>\n                </ComponentCol>\n              );\n            })}\n            {children}\n          </ComponentRow>\n          <ComponentBtnGroup className=\"search-btns\">\n            <Button\n              title={intl.formatMessage(messages.titleButtonTop)}\n              type={type === 'grid' ? 'primary' : 'default'}\n              onClick={e => this.searchForm()}\n              htmlType=\"submit\"\n              icon={<i className=\"las la-search\" />}\n            >\n              {intl.formatMessage(messages.titleButtonTop)}\n            </Button>\n            <Button title={intl.formatMessage(messages.titleButtonBottom)} onClick={e => this.resetForm()} icon={<i className=\"las la-redo-alt\" />}>\n              {intl.formatMessage(messages.titleButtonBottom)}\n            </Button>\n          </ComponentBtnGroup>\n        </Form>\n      </div>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  /**\n   * See the help document column.js usage for details\n   */\n  columns: PropTypes.array.isRequired,\n  /**\n   * Use record data to assign values to the form {key: value, key1: value1}, the initial value of the time type needs to be converted to the moment type\n   */\n  record: PropTypes.object,\n  /**\n   * Search bar type inline (inline), grid (grid)\n   */\n  type: PropTypes.string,\n  /**\n   * Group search conditions. After setting this property, search items with the same group value will be filtered in column.js\n   */\n  group: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * Row configuration in the Grid component in the same antd\n   */\n  rows: PropTypes.object,\n  /**\n   * Col configuration in Grid component in antd\n   */\n  cols: PropTypes.object,\n  /**\n   * Additional search terms\n   */\n  children: PropTypes.node,\n  /**\n   * How to deal with items with pop-up boxes in the form, such as drop-down box, drop-down tree, date selection, etc.\n   * Set to true will automatically attach to the form, or use function to specify\n   * For usage, see antd's getPopupContainer property with pop-up component http://ant-design.gitee.io/components/select/\n   * appendTo={triggerNode => triggerNode.parentNode}\n   */\n  appendTo: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n\n  form: PropTypes.object,\n\n  /**\n   * Click the query button onSearch (values, isReset) values to query whether the data isReset is reset\n   */\n  onSearch: PropTypes.func\n};\n\nSearchBar.defaultProps = {\n  prefixCls: 'antui-searchbar',\n  type: 'inline'\n};\n\nexport default SearchBar;\n","import SearchBar from './SearchBar';\n\nexport default SearchBar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button } from 'antd';\nimport cx from 'classnames';\nimport intl from 'react-intl-universal';\n\nimport LoadTable from 'components/DataTable/LoadTable';\nimport SearchBar from 'components/SearchBar';\nimport messages from './messages';\n\nimport './style/index.less';\n\nclass ModalTable extends Component {\n  constructor(props) {\n    super(props);\n    const { value, dataItems, visible, loading } = props;\n    this.state = {\n      value,\n      dataItems,\n      visible,\n      loading,\n      selectedRows: [],\n    };\n  }\n\n  onSearch = (values, isReset) => {\n    const { tableProps } = this.props;\n    tableProps.onSearch && tableProps.onSearch(values)\n  };\n\n  onOk = () => {\n    const { value, selectedRows } = this.state;\n    const { onSubmit } = this.props;\n    if (onSubmit) {\n      onSubmit(value, selectedRows);\n    }\n  };\n\n  render() {\n    const {\n      title,\n      className,\n      columns,\n      tableProps,\n      modalProps,\n      full,\n      width,\n      onCancel,\n      onOk,\n      visible,\n      loading\n    } = this.props;\n\n    const classname = cx(className, 'antui-table-modal', 'antui-modalform', {\n      'full-modal': full\n    });\n\n    const searchBarProps = {\n      columns,\n      onSearch: this.onSearch\n    };\n\n    const titleComp = title && (\n      <div className=\"with-search-title\">\n        <div className=\"left-title\">{title}</div>\n        <SearchBar {...searchBarProps} />\n      </div>\n    );\n\n    const _modalProps = {\n      className: classname,\n      confirmLoading: loading,\n      visible,\n      width: width || 600,\n      style: { top: 20 },\n      title: titleComp,\n      destroyOnClose: true,\n      onCancel: onCancel,\n      onOk: this.onOk,\n      footer: [\n        <div\n          key=\"footer-page\"\n          className=\"footer-page\"\n          ref={e => (this.paginationContainer = e)}\n        ></div>,\n        <Button key=\"back\" onClick={onCancel}>\n          {intl.formatMessage(messages.cancel)}\n        </Button>,\n        onOk && (\n          <Button key=\"submit\" type=\"primary\" onClick={this.onOk}>\n            {intl.formatMessage(messages.save)}\n          </Button>\n        )\n      ],\n      ...modalProps\n    };\n\n    return (\n      <Modal {..._modalProps}>\n        <LoadTable columns={columns} {...tableProps} />\n      </Modal>\n    );\n  }\n}\n\nModalTable.propTypes = {\n  visible: PropTypes.bool,\n  loading: PropTypes.bool,\n  loadData: PropTypes.bool,\n  full: PropTypes.bool,\n  value: PropTypes.string,\n  title: PropTypes.string,\n  rowKey: PropTypes.string,\n  width: PropTypes.number,\n  selectType: PropTypes.string,\n  className: PropTypes.string,\n  dataItems: PropTypes.object,\n  modalOpts: PropTypes.object,\n  tableProps: PropTypes.object,\n  columns: PropTypes.array,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func,\n};\n\nexport default ModalTable;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {Button, Col, Drawer, Modal, Popconfirm, Row, Spin} from 'antd';\nimport cx from 'classnames';\nimport Nestable from 'react-nestable';\nimport intl from \"react-intl-universal\";\n\nimport Form from 'components/Form';\nimport messages from \"./messages\";\n\nimport './style/index.less';\nclass ModalDragList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visibleEditMenu: false,\n      record: null,\n    }\n  }\n  order = 0;\n\n  onEdit = (record) => {\n    this.setState({ visibleEditMenu: true, record })\n  }\n\n  changeFeatured = (item, id) => {\n    const { data, onSubmit } = this.props;\n    onSubmit(this.findItemById(item, id, data), null);\n  }\n\n  findItemById = (newItem, id, array) => {\n    return array.map((item) => {\n      if (item.id === id) {\n        return newItem\n      } else if (item.children){\n        item.children = this.findItemById(newItem, id, item.children)\n      }\n      return item;\n    })\n  }\n\n  onSubmit = (value) => {\n    const { onSubmit, data } = this.props;\n    const { record } = this.state;\n    let temp;\n\n    value = {...record, ...value};\n\n    if (!!record) {\n      temp = this.findItemById(value, record.id, data)\n    } else {\n      value.id = -data.length\n      value.order = data.length + 1\n      data.push(value)\n      temp = [...data];\n    }\n    onSubmit(temp, value);\n    this.setState({ visibleEditMenu: false, record: null })\n  }\n\n  onDragEnd = (items, item) => {\n    let { onDrag } = this.props\n    this.order = 0;\n    items = this.loop(items, null, item);\n    return onDrag(items)\n  }\n\n  loop (array, parentId, item) {\n    for (let i = 0; i < array.length; i++) {\n      this.order++;\n      array[i]['order'] = this.order;\n      array[i]['parent_id'] = parentId;\n      if (array[i].children.length > 0) {\n        array[i].children = this.loop(array[i].children, array[i].id, item);\n      }\n    }\n    return array;\n  }\n\n  render() {\n    const { className, title, onCancel, onSave, onDelete, loading, modalOpts, visible, data, formOpts, columns, maxDepth } = this.props;\n    const { visibleEditMenu, record } = this.state;\n    const modalProps = {\n      className: cx(className, 'antui-modaldrag', ),\n      visible,\n      title: title,\n      // maskClosable: true,\n      destroyOnClose: true,\n      onCancel: onCancel,\n      footer: [\n        onCancel && (\n          <Button key=\"back\" onClick={onCancel}>\n            {intl.formatMessage(messages.cancel)}\n          </Button>\n        ),\n        onSave && (\n          <Button key=\"submit\" type=\"primary\" onClick={onSave} loading={loading}>\n            {intl.formatMessage(messages.save)}\n          </Button>\n        )\n      ],\n      ...modalOpts\n    };\n    const formProps = {\n      columns,\n      record,\n      onSubmit: this.onSubmit,\n      formItemLayout: {\n        labelCol: { span: 24 },\n        wrapperCol: { span: 24 }\n      },\n      ...formOpts\n    };\n\n    return (\n      <>\n        <Modal {...modalProps}>\n          <Spin spinning={loading}>\n            <Button size=\"small\" onClick={() => this.onEdit(null)}>\n              <i className=\"las la-plus\" />\n            </Button>\n            <Nestable\n              maxDepth={maxDepth}\n              items={data}\n              onChange={this.onDragEnd}\n              renderItem={({ item, index }) => (\n                <Row className=\"item-list\" align=\"middle\" justify=\"space-between\">\n                  <Col>{item.name}</Col>\n                  <Col>\n                    <Button.Group>\n                      <Button\n                        size=\"small\"\n                        type={item.status === 0 ? \"primary\" : \"\"}\n                        danger={item.status === 0}\n                        onClick={() => this.changeFeatured({...item, status:  item.status === 1 ? 0 : 1}, item.id)}\n                      >\n                        <i className={`las ${ item.status === 0 ? \"la-low-vision\" : \"la-eye\"}`} />\n                      </Button>\n                      {typeof item.featured  !== 'undefined' && (\n                        <Button\n                          size=\"small\"\n                          type={item.featured === 1 ? \"primary\" : \"\"}\n                          onClick={() => this.changeFeatured({...item, featured:  item.featured === 1 ? 0 : 1}, item.id)}\n                        >\n                          <i className=\"las la-award\" />\n                        </Button>\n                      )}\n                      <Button size=\"small\" onClick={() => this.onEdit(item)}>\n                        <i className=\"las la-edit\" />\n                      </Button>\n                      <Popconfirm\n                        title=\"Are you sure？\"\n                        icon={<i className=\"las la-question-circle\" />}\n                        onConfirm={() => onDelete(item.id)}\n                      >\n                        <Button size=\"small\" type=\"primary\" danger>\n                          <i className=\"las la-trash-alt\" />\n                        </Button>\n                      </Popconfirm>\n                    </Button.Group>\n                  </Col>\n                </Row>\n              )}\n            />\n          </Spin>\n        </Modal>\n        <Drawer\n          destroyOnClose={true}\n          title={record ? intl.formatMessage(messages.edit) :  intl.formatMessage(messages.new)}\n          placement=\"right\"\n          closable={false}\n          onClose={() => this.setState({ visibleEditMenu: false })}\n          visible={visibleEditMenu}\n        >\n          <Form ref=\"form\" {...formProps} />\n        </Drawer>\n      </>\n    );\n  }\n}\n\nModalDragList.propTypes = {\n  visible: PropTypes.bool,\n  loading: PropTypes.bool,\n  className: PropTypes.string,\n  title: PropTypes.string,\n  data: PropTypes.array,\n  columns: PropTypes.array,\n  onDrag: PropTypes.func,\n  onCancel: PropTypes.func,\n  onSave: PropTypes.func,\n  onSubmit: PropTypes.func,\n  onDelete: PropTypes.func,\n  modalOpts: PropTypes.object,\n  formOpts: PropTypes.object,\n  maxDepth: PropTypes.number,\n}\n\nModalDragList.defaultProps = {\n  visible: false,\n  data: [],\n  maxDepth: 1,\n}\n\nexport default ModalDragList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {Modal, Button, Row, Col, Popconfirm} from 'antd';\nimport cx from 'classnames';\nimport intl from 'react-intl-universal';\nimport omit from 'object.omit';\n\nimport Form from 'components/Form';\nimport messages from './messages';\n\nimport './style/index.less';\n\nclass ModalArrayForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.visible !== prevState.visible) {\n      return {\n        visible: nextProps.visible\n      };\n    }\n    return null;\n  }\n\n  closeModal = () => {\n    if (this.props.onCancel) {\n      this.props.onCancel();\n      return;\n    }\n    this.setState({\n      visible: false\n    });\n  };\n\n  onSubmit = async () => {\n    const { onSubmit } = this.props;\n    const array = [];\n    let check = true;\n    for (let key in this.refs) {\n      try {\n        const value = await this.refs[key].refs.form.validateFields()\n        array.push(value)\n      } catch (errorInfo) {\n        check = false;\n        console.log('Failed:', errorInfo);\n      }\n    }\n    if (check) onSubmit && onSubmit(array);\n  };\n\n  render() {\n    const {\n      title,\n      array,\n      className,\n      columns,\n      onCancel,\n      onSubmit,\n      modalOpts,\n      formOpts,\n      loading,\n      full,\n      onAdd,\n      onRemove,\n    } = this.props;\n\n    const classname = cx(className, 'antui-modal-array-form', { 'full-modal': full });\n    const modalProps = {\n      className: classname,\n      visible: this.state.visible,\n      style: { top: 20 },\n      title: title,\n      // maskClosable: true,\n      destroyOnClose: true,\n      onCancel: this.closeModal,\n      footer: [\n        onCancel && (\n          <Button key=\"back\" onClick={this.closeModal}>\n            {intl.formatMessage(messages.cancel)}\n          </Button>\n        ),\n        onSubmit && (\n          <Button key=\"submit\" type=\"primary\" onClick={this.onSubmit} loading={loading}>\n            {intl.formatMessage(messages.save)}\n          </Button>\n        )\n      ],\n      ...modalOpts\n    };\n    const _columns = columns.map(item => omit(item, [\n      'tableItem',\n      'searchItem',\n    ]))\n    const formProps = {\n      columns: _columns,\n      onSubmit,\n      footer: false,\n      formItemLayout: {\n        labelCol: { span: 24 },\n        wrapperCol: { span: 24 }\n      },\n      ...formOpts\n    };\n\n    return (\n      <Modal {...modalProps}>\n        <Button type=\"primary\" onClick={onAdd}>\n          <i className=\"las la-plus\" />\n        </Button>\n        {array.map((item, index) => (\n          <Row align=\"middle\" gutter={16} key={index}>\n            <Col flex=\"1\">\n              <Form ref={\"form\" + index} {...formProps} record={item} />\n            </Col>\n            <Col>\n              <Popconfirm\n                title=\"Are you sure？\"\n                icon={<i className=\"las la-question-circle\" />}\n                onConfirm={() => onRemove(index)}\n              >\n                <Button type=\"primary\" danger>\n                  <i className=\"las la-minus\" />\n                </Button>\n              </Popconfirm>\n            </Col>\n          </Row>\n        ))}\n      </Modal>\n    );\n  }\n}\n\nModalArrayForm.propTypes = {\n  title: PropTypes.string,\n  array: PropTypes.array,\n  visible: PropTypes.bool,\n  loading: PropTypes.bool,\n  full: PropTypes.bool,\n  preview: PropTypes.bool,\n  columns: PropTypes.array,\n  onCancel: PropTypes.func,\n  onSubmit: PropTypes.func,\n  modalOpts: PropTypes.object,\n  formOpts: PropTypes.object,\n  className: PropTypes.string\n};\n\nexport default ModalArrayForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip } from 'antd';\n\nimport './style/index.less';\n\nconst ButtonGroup = Button.Group;\n/**\n *  Button\n */\nclass uiButton extends React.Component {\n  static Group = ButtonGroup;\n\n  render() {\n    const { tooltip, prefixCls, ...otherProps } = this.props;\n    return tooltip ? (\n      <Tooltip overlayClassName={prefixCls} title={tooltip === true ? otherProps.title : tooltip}>\n        <Button {...otherProps} />\n      </Tooltip>\n    ) : (\n      <Button {...otherProps} />\n    );\n  }\n}\n\nuiButton.propTypes = {\n  prefixCls: PropTypes.string,\n  tooltip: PropTypes.oneOfType([PropTypes.bool, PropTypes.node])\n};\n\nuiButton.defaultProps = {\n  prefixCls: 'antui-button-tooltip',\n};\n\nexport default uiButton;\n","import React, { Component } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport './style/ripple.less';\n\n/**\n * Imitation material design ripple effect\n */\nclass Ripple extends Component {\n  onClick = e => {\n    this.createRipple(e);\n  };\n\n  createRipple = e => {\n    const btnWidth = this.element.clientWidth;\n    const rect = this.element.getBoundingClientRect();\n    const btnOffsetTop = rect.top;\n    const btnOffsetLeft = rect.left;\n    const posMouseX = e.pageX;\n    const posMouseY = e.pageY;\n    const rippleX = posMouseX - btnOffsetLeft;\n    const rippleY = posMouseY - btnOffsetTop;\n\n    const rippleAnimate = document.createElement('div');\n    rippleAnimate.className = 'ripple-animate';\n    const baseStyle = `\n      top: ${rippleY - btnWidth}px; \n      left: ${rippleX - btnWidth}px; \n      width: ${btnWidth * 2}px; \n      height: ${btnWidth * 2}px;\n    `;\n    rippleAnimate.style.cssText = baseStyle;\n    this.element.appendChild(rippleAnimate);\n\n    setTimeout(() => {\n      requestAnimationFrame(() => {\n        rippleAnimate.style.cssText =\n          baseStyle +\n          ' transform: scale(1); -webkit-transition: scale(1); opacity: 0;';\n      });\n    }, 50); // If there is no delay, sometimes the animation will not take effect, and no reason has been found.\n\n    setTimeout(() => {\n      rippleAnimate.remove();\n    }, 750);\n  };\n\n  render() {\n    const { children, type, ghost, ...otherProps } = this.props;\n    return (\n      <a\n        ref={node => (this.element = node)}\n        className={cx('ripple-btn', type, { ghost })}\n        {...otherProps}\n        onClick={this.onClick}\n      >\n        <span>{children}</span>\n      </a>\n    );\n  }\n}\n\nRipple.propTypes = {\n  children: PropTypes.any,\n  type: PropTypes.string,\n  ghost: PropTypes.bool,\n};\n\nexport default Ripple;\n","import Button from './Button';\nimport Ripple from './Ripple';\n\nButton.Ripple = Ripple;\nexport default Button;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col, Button, Divider, Form } from 'antd';\nimport cx from 'classnames';\nimport objectAssign from 'object-assign';\nimport $$ from 'cmn-utils';\nimport omit from 'object.omit';\nimport intl from 'react-intl-universal';\n\nimport Password from './model/password';\nimport messages from './messages';\n\nimport './style/index.less';\n\nconst PlainComp = ({ className, children }) => (\n  <div className={className}>{children}</div>\n);\nPlainComp.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.node\n};\n\n/**\n * Form component\n */\nclass FormComp extends React.Component {\n  // When type is grid, specify the number of elements in each row\n  cols = {\n    xs: 24,\n    md: 24,\n    xl: 24\n  };\n\n  // Inline element default width\n  width = {\n    date: 100,\n    month: 100,\n    'date~': 210,\n    datetime: 140,\n    select: 100,\n    default: 100,\n    treeSelect: 110,\n    cascade: 110,\n    cascader: 110\n  };\n\n  // Specify the interval between every two elements when type is grid\n  rows = {\n    gutter: 8\n  };\n\n  onReset = e => {\n    this.refs.form.resetFields();\n  };\n\n  onSubmit = values => {\n    const { record, onSubmit } = this.props;\n    onSubmit && onSubmit(values, record);\n  };\n\n  render() {\n    const {\n      className,\n      prefixCls,\n      type,\n      rows,\n      cols,\n      formItemLayout: _formItemLayout,\n      layout,\n      appendTo,\n      columns,\n      record,\n      group,\n      children,\n      preview,\n      loading,\n      footer,\n      ...otherProps\n    } = this.props;\n\n    delete otherProps.onSubmit;\n\n    let classname = cx(prefixCls, className, {\n      'form-inline': type === 'inline',\n      'form-grid': type === 'grid',\n      preview: preview\n    });\n\n    const colopts = type === 'grid' ? cols || this.cols : {};\n    const rowopts = type === 'grid' ? rows || this.rows : {};\n\n    let ComponentRow = type === 'inline' ? PlainComp : Row;\n    let ComponentCol = type === 'inline' ? PlainComp : Col;\n    let ComponentItem = Form.Item;\n\n    let formFields = columns.filter(col => col.formItem);\n    formFields = group\n      ? formFields.filter(col => col.formItem && col.formItem.group === group)\n      : formFields;\n\n    let getPopupContainer = null;\n    if (appendTo) {\n      if ($$.isFunction(appendTo)) getPopupContainer = appendTo;\n      else if (appendTo === true)\n        getPopupContainer = triggerNode => triggerNode.parentNode;\n      else getPopupContainer = _ => appendTo;\n    }\n\n    return (\n      <Form\n        ref=\"form\"\n        className={classname}\n        initialValues={record}\n        onFinish={this.onSubmit}\n        scrollToFirstError={true}\n        {...objectAssign(otherProps, type === 'inline' && { layout: 'inline' })}\n      >\n        <ComponentRow className=\"row-item\" {...rowopts}>\n          {formFields.map((field, i) => {\n            // Pass in the personalized column size, change this value to change the number of elements per line\n            let col = { ...colopts };\n            if (type === 'grid' && field.formItem.col) {\n              col = field.formItem.col;\n            } else if (type !== 'grid') {\n              col = {};\n            }\n\n            let formItemLayout = { ..._formItemLayout, ...layout };\n            if (\n              type === 'grid' &&\n              (field.formItem.formItemLayout || field.formItem.layout)\n            ) {\n              formItemLayout = {\n                ...formItemLayout,\n                ...field.formItem.formItemLayout,\n                ...field.formItem.layout\n              };\n            } else if (type !== 'grid') {\n              formItemLayout = {};\n            }\n\n            const fieldType = field.formItem.type || 'input';\n\n            let formProps = {\n              name: field.name,\n              title: field.title,\n              form: this,\n              record,\n              preview,\n              ...field.formItem\n            };\n\n            const itemFormProps = {\n              rules: field.formItem.rules || []\n            }\n\n            if (type === 'inline') {\n              formProps.style = {\n                width: formProps.width || this.width[fieldType]\n              };\n            }\n\n            if (getPopupContainer) {\n              formProps.getPopupContainer = getPopupContainer;\n            }\n\n            if (field.dict) {\n              formProps.dict = field.dict;\n            }\n\n            // Remove useless attributes before passing in child components\n            formProps = omit(formProps, ['formItemLayout', 'layout', 'col']);\n\n            let FieldComp;\n            switch (fieldType) {\n              case 'time~': // Time range\n              case 'date~': // Date range\n              case 'datetime': // Date and time\n              case 'date': // Date\n              case 'month': // Month\n              case 'time': // Time\n                FieldComp = require(`./model/date`).default(formProps);\n                break;\n              case 'input': // Input box\n              case 'textarea': // Multiline text\n                FieldComp = require(`./model/input`).default(formProps);\n                break;\n              case 'hidden': // Hidden domain\n                break;\n              case 'line': // Divider\n                const lineProps = omit(formProps, 'type');\n                return (\n                  <Divider key={`col-${i}`} {...lineProps}>\n                    {formProps.title}\n                  </Divider>\n                );\n              case 'password': // password\n                return (\n                  <Password\n                    key={`col-${i}`}\n                    formItemLayout={formItemLayout}\n                    col={col}\n                    {...formProps}\n                  />\n                );\n              case \"upload\":\n                itemFormProps.getValueFromEvent = e => {\n                  if (Array.isArray(e)) {\n                    return e;\n                  }\n                  return e && e.fileList;\n                };\n                const { maxFileSize, fileTypes, max } = field.formItem;\n                if (maxFileSize || fileTypes) {\n                  itemFormProps.rules = [\n                    ...(itemFormProps.rules || []),\n                    ({ getFieldValue }) => ({\n                      validator: (rule, value, callback) => {\n                        let msg;\n                        if (max) {\n                          msg = validatorMaxFile(max, value);\n                        }\n                        if (maxFileSize && !msg) {\n                          msg = validatorFileSize(maxFileSize, value, callback);\n                        }\n                        if (fileTypes && !msg) {\n                          msg = validatorFileTypes(fileTypes, value, callback);\n                        }\n                        if (msg) {\n                          return Promise.reject(msg);\n                        }\n                        return Promise.resolve();\n                      }\n                    }),\n                  ];\n                }\n                FieldComp = require(`./model/upload`).default(formProps);\n                break;\n              default:\n                // General\n                FieldComp = require(`./model/${fieldType.toLowerCase()}`).default(\n                  formProps\n                );\n            }\n\n            return (\n              <ComponentCol key={`col-${i}`} className={\"col-item \" + fieldType} {...col}>\n                <ComponentItem\n                  {...formItemLayout}\n                  {...itemFormProps}\n                  label={field.title}\n                  name={field.name}\n                  className=\"col-item-content\"\n                  validateTrigger={['onChange', 'onBlur']}\n                >\n                  {FieldComp}\n                </ComponentItem>\n              </ComponentCol>\n            );\n          })}\n          {children}\n          {footer === undefined ? (\n            <ComponentCol className=\"form-btns col-item\" {...colopts}>\n              <Button\n                title={intl.formatMessage(messages.submit)}\n                type=\"primary\"\n                htmlType=\"submit\"\n                icon={<i className=\"las la-check\" />}\n                loading={loading}\n              >\n                {intl.formatMessage(messages.submit)}\n              </Button>\n              <Button\n                title={intl.formatMessage(messages.reset)}\n                onClick={e => this.onReset()} icon={<i className=\"las la-redo-alt\" />}\n              >\n                {intl.formatMessage(messages.reset)}\n              </Button>\n            </ComponentCol>\n          ) : (\n            footer\n          )}\n        </ComponentRow>\n      </Form>\n    );\n  }\n}\n\nexport const Item = Form.Item;\n\nFormComp.propTypes = {\n  prefixCls: PropTypes.string,\n  className: PropTypes.string,\n  /**\n   * See the help document column.js usage for details\n   */\n  columns: PropTypes.array.isRequired,\n  /**\n   * Use record data to assign values to the form {key: value, key1: value1}, the initial value of the time type needs to be converted to the moment type\n   */\n  record: PropTypes.object,\n  /**\n   * Form type inline (line), grid (grid)\n   */\n  type: PropTypes.string,\n  /**\n   * Group search conditions. After setting this property, search items with the same group value will be filtered in column.js\n   */\n  group: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * How to deal with items with pop-up boxes in the form, such as drop-down box, drop-down tree, date selection, etc.\n   * Set to true will automatically attach to the form, or use function to specify\n   * For usage, see antd's getPopupContainer property with pop-up component https://ant-design.gitee.io/components/select/\n   * appendTo={triggerNode => triggerNode.parentNode}\n   */\n  appendTo: PropTypes.oneOfType([PropTypes.bool, PropTypes.func]),\n  /**\n   * Row configuration in the Grid component in the same antd\n   */\n  rows: PropTypes.object,\n  /**\n   * Col configuration in Grid component in antd\n   */\n  cols: PropTypes.object,\n  /**\n   * Extra form items\n   */\n  children: PropTypes.node,\n  /**\n   * Click the query button onSubmit (values) values to submit data\n   */\n  onSubmit: PropTypes.func,\n\n  /**\n   * Whether it is a preview view, all form items will be displayed in text mode\n   */\n  preview: PropTypes.bool,\n\n  /** antd formItemLayout */\n  formItemLayout: PropTypes.object,\n  layout: PropTypes.object, // Same as formItemLayout\n\n  /**\n   * Is it in the submission status\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Whether to display the bottom button, or pass in a custom bottom button\n   */\n  footer: PropTypes.oneOfType([PropTypes.bool, PropTypes.node]),\n};\n\nFormComp.defaultProps = {\n  prefixCls: 'antui-form',\n  type: 'grid',\n  loading: false,\n  formItemLayout: {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 17 }\n  }\n};\n\nexport default FormComp;\n\nconst validatorFileSize = (maxFileSize, value, callback) => {\n  if (value.some(item => item.size > maxFileSize * 1024)) {\n    // return callback(new Error(`Please upload an image with a file size of ${maxFileSize}K`));\n    return `Please upload an image with a file size of ${maxFileSize}K`\n  }\n  return null;\n};\n\nconst validatorFileTypes = (fileTypes, value, callback) => {\n  if ($$.isArray(fileTypes) && fileTypes.length > 0) {\n    if (\n      value.some(\n        item =>\n          item.name &&\n          !fileTypes.some(\n            type => item.name.toLowerCase().indexOf(type.toLowerCase()) !== -1\n          )\n      )\n    ) {\n      // return callback(new Error(`Please upload ${fileTypes.join('、')}, type file`));\n      return `Please upload ${fileTypes.join('、')}, type file`\n    }\n  }\n  return null;\n};\n\nconst validatorMaxFile = (max, value) => {\n  if (value && value.length > max) {\n    return `Only upload ${max} files`;\n  }\n  return null;\n}\n","import Form from './Form';\n\nexport default Form;","var map = {\n\t\"./autocomplete\": 898,\n\t\"./autocomplete.js\": 898,\n\t\"./cascade\": 899,\n\t\"./cascade.js\": 899,\n\t\"./checkbox\": 900,\n\t\"./checkbox.js\": 900,\n\t\"./custom\": 901,\n\t\"./custom.js\": 901,\n\t\"./date\": 861,\n\t\"./date.js\": 861,\n\t\"./editor\": 927,\n\t\"./editor.js\": 927,\n\t\"./input\": 850,\n\t\"./input.js\": 850,\n\t\"./media\": 928,\n\t\"./media.js\": 928,\n\t\"./number\": 905,\n\t\"./number.js\": 905,\n\t\"./password\": 876,\n\t\"./password.js\": 876,\n\t\"./radio\": 906,\n\t\"./radio.js\": 906,\n\t\"./select\": 907,\n\t\"./select.js\": 907,\n\t\"./switch\": 908,\n\t\"./switch.js\": 908,\n\t\"./table\": 909,\n\t\"./table.js\": 909,\n\t\"./transfer\": 910,\n\t\"./transfer.js\": 910,\n\t\"./transfertree\": 924,\n\t\"./transfertree.js\": 924,\n\t\"./treeselect\": 914,\n\t\"./treeselect.js\": 914,\n\t\"./upload\": 882,\n\t\"./upload.js\": 882\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 874;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input, Col, Form } from 'antd';\nimport intl from 'react-intl-universal';\n\nimport messages from '../messages';\n/**\n * Password control\n */\nclass PasswordForm extends Component {\n  state = {\n    confirmDirty: false\n  };\n\n  handleConfirmBlur = e => {\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  };\n\n  checkPassword = (value, name, getFieldValue) => {\n    if (value && value !== getFieldValue(name)) {\n      return Promise.reject(intl.formatMessage(messages.twoPasswords));\n    }\n    return Promise.resolve();\n  };\n\n  checkConfirm = (value, name, validateFields, confirmDirty) => {\n    if (value && confirmDirty) {\n      validateFields([name + '_repeat'], { force: true });\n    }\n    return Promise.resolve();\n  };\n\n  render() {\n    const {\n      name,\n      formFieldOptions = {},\n      rules,\n      placeholder,\n      type,\n      formItemLayout,\n      col,\n      repeat,\n      getPopupContainer,\n      ...otherProps\n    } = this.props;\n\n\n    // If there are rules\n    formFieldOptions.rules = [\n      {\n        required: true,\n        message: `${intl.formatMessage(messages.pleaseEnter)} ${otherProps.title}`\n      },\n      {\n        min: 6,\n        message: intl.formatMessage(messages.passwordMin)\n      },\n      ({ validateFields }) => {\n        const { checkConfirm, state } = this;\n        const { confirmDirty } = state;\n        return { validator(rule, value) {\n          return checkConfirm(value, name, validateFields, confirmDirty);\n        }}\n      }\n    ];\n\n    // If there are rules\n    if (rules && rules.length) {\n      formFieldOptions.rules = formFieldOptions.rules.concat(rules);\n    }\n\n    let ComponentCol = type === 'inline' ? 'div' : Col;\n\n    return (\n      <>\n        <ComponentCol className=\"col-item col-item-password\" {...col}>\n          <Form.Item\n            {...formItemLayout}\n            {...formFieldOptions}\n            name={name + \"\"}\n            label={otherProps.title}\n            hasFeedback\n            className=\"col-item-content\"\n            validateTrigger={['onChange', 'onBlur']}\n          >\n            <Input.Password\n              type=\"password\"\n              placeholder={placeholder || `Please enter ${otherProps.title}`}\n            />\n          </Form.Item>\n        </ComponentCol>\n        {repeat ? (\n          <ComponentCol className=\"col-item col-item-repeat-password\" {...col}>\n            <Form.Item\n              {...formItemLayout}\n              name={name + '_repeat'}\n              label={'Confirm ' + otherProps.title}\n              hasFeedback\n              className=\"col-item-content\"\n              rules={[\n                {\n                  required: true,\n                  message: `Please enter again ${otherProps.title}`\n                },\n                ({ getFieldValue }) => {\n                  const { checkPassword } = this;\n                  return { validator(rule, value) {\n                    return checkPassword(value, name, getFieldValue);\n                  }}\n                }\n              ]}\n              validateTrigger={['onChange', 'onBlur']}\n            >\n              <Input.Password\n                type=\"password\"\n                onBlur={this.handleConfirmBlur}\n                placeholder={intl.formatMessage(messages.twoInput)}\n              />\n            </Form.Item>\n          </ComponentCol>\n        ) : null}\n      </>\n    );\n  }\n}\n\nPasswordForm.propTypes = {\n  name: PropTypes.string,\n  initialValue: PropTypes.string,\n  formFieldOptions: PropTypes.object,\n  rules: PropTypes.array,\n  placeholder: PropTypes.string,\n  ComponentCol: PropTypes.node,\n  ComponentItem: PropTypes.node,\n  formItemLayout: PropTypes.object,\n  col: PropTypes.object,\n  repeat: PropTypes.bool,\n  type: PropTypes.string\n};\n\nexport default PasswordForm;","import React from 'react';\nimport { Upload } from 'antd';\nimport PropTypes from 'prop-types';\nimport $$ from 'cmn-utils';\n\nimport config from '@/config';\n\n// Get parameters from the global configuration\nconst request = config.request || {};\n\n/**\n * Enable Upload to take the global proxy and carry global header information\n */\nclass uiUpload extends React.PureComponent {\n  render() {\n    const { headers, action, value, fileTypes, maxFileSize, max,...otherProps } = this.props;\n    let newheaders = { ...headers };\n\n    const uploadProps = { ...otherProps };\n\n    if (request && request.withHeaders) {\n      if ($$.isFunction(request.withHeaders)) {\n        newheaders = { ...request.withHeaders(), ...newheaders };\n      } else if ($$.isObject(request.withHeaders)) {\n        newheaders = { ...request.withHeaders, ...newheaders };\n      }\n      uploadProps.headers = newheaders;\n    }\n\n    let nextURL = (request.prefix || '') + action;\n    if (/^(http|https|ftp):\\/\\//.test(action)) {\n      nextURL = action;\n    }\n\n    if (action) {\n      uploadProps.action = nextURL;\n    }\n    if (value) {\n      uploadProps.fileList = value;\n    }\n\n    uploadProps.beforeUpload = (file, fileList) => {\n      let bool = true;\n      if (value && max) {\n        bool = (value.length + fileList.length) <= max\n      }\n      if (maxFileSize && bool) {\n        bool = !(file.size > maxFileSize * 1024)\n      }\n      if (fileTypes && bool) {\n        bool = fileTypes.some(\n          type => file.name.toLowerCase().indexOf(type.toLowerCase()) !== -1\n        )\n      }\n      return bool;\n    }\n    \n    return <Upload {...uploadProps} />;\n  }\n}\n\nuiUpload.propTypes = {\n  headers: PropTypes.object,\n  action: PropTypes.string,\n};\n\nexport default uiUpload;\n","import Upload from './Upload';\n\nexport default Upload;","import React from 'react';\nimport { Button } from 'antd';\nimport intl from 'react-intl-universal';\n\nimport Upload from 'components/Upload';\n\nimport messages from '../messages';\n/**\n * Upload component, you may need to process the inverse value yourself, if FormData is needed in the background\n * const formData = new FormData();\n   fileList.forEach((file) => {\n     formData.append('files[]', file);\n   });\n */\nexport default ({\n  form,\n  name,\n  formFieldOptions = {},\n  record,\n  normalize,\n  rules,\n  onChange,\n  type,\n  preview,\n  renderUpload,\n  btnIcon = 'las la-upload',\n  action, // Background address\n  fileName, // The name attribute of antd upload, because name is used by formItem, the file name uploaded to the background\n  getPopupContainer,\n  ...otherProps\n}) => {\n\n  // If you need onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = args => onChange(form, args); // form, args\n  }\n\n  let uploadProps = {\n    beforeUpload: file => false,\n    ...otherProps\n  };\n\n  // Really upload to the background\n  if (action) {\n    uploadProps = otherProps;\n    uploadProps.action = action;\n    uploadProps.name = fileName || 'file';\n  }\n\n  return (\n    <Upload {...uploadProps}>\n      {renderUpload ? renderUpload(form, record) : (\n        <Button icon={<i className={btnIcon} />}>\n          {intl.formatMessage(messages.clickUpload)}\n        </Button>\n      )}\n    </Upload>\n  );\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AutoComplete, Input } from 'antd';\nimport $$ from 'cmn-utils';\nimport omit from 'object.omit';\nimport isEqual from 'react-fast-compare';\n\nconst { Option } = AutoComplete;\n\nclass AutoCompleteControlled extends Component {\n  constructor(props) {\n    super(props);\n    const { value, loadData, options } = props;\n    this.state = {\n      value,\n      options,\n      loading: false\n    };\n    this.handleSearch = loadData ? $$.debounce(this._handleSearch, 500) : null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { loadData } = this.props;\n    if (\n      !isEqual(this.props.options, prevProps.options) ||\n      !isEqual(this.props.value, prevProps.value)\n    ) {\n      const newState = { value: this.props.value };\n      if (!loadData && this.props.options) {\n        newState.options = this.props.value ? this.props.options : [];\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  onSearch = value => {\n    const { onChange, loadData } = this.props;\n    if (onChange) {\n      onChange(value, {});\n    }\n    if (!value.trim()) {\n      this.setState({\n        options: [],\n        value\n      });\n      return;\n    } else {\n      this.setState({\n        value\n      });\n    }\n\n    if (loadData) {\n      this.handleSearch(value);\n    }\n  };\n\n  _handleSearch = value => {\n    const { loadData } = this.props;\n\n    this.setState({ loading: true }); // input suffix Attributes cause input interruption when input\n    const promise = loadData(value);\n    if (promise && promise.then) {\n      promise\n        .then(listItem => {\n          this.setState({\n            options: listItem,\n            loading: false\n          });\n        })\n        .catch(e =>\n          this.setState({\n            options: [],\n            loading: false\n          })\n        );\n    }\n  };\n\n  renderOptions = options => {\n    const { render } = this.props;\n    if (render) return render(options) || [];\n    else {\n      return options.map(this.renderOptionItem);\n    }\n  };\n\n  renderOptionItem = (item, index) => {\n    const { keyField, valueField, renderItem } = this.props;\n    return (\n      <Option key={item[keyField] || index} value={item[valueField] || index}>\n        {!!renderItem && renderItem(item)}\n      </Option>\n    );\n  };\n\n  onSelect = (value, option) => {\n    const { onChange } = this.props;\n    if (onChange) {\n      const { valueField, optionLabelProp } = this.props;\n      const itemProps = option.props;\n      const valueKey = valueField || optionLabelProp;\n      const rvalue = itemProps[valueKey] || value;\n      onChange(rvalue, option);\n    }\n  };\n\n  render() {\n    const { value, options, loading } = this.state;\n    const autoComponentProps = omit(this.props, [\n      'value',\n      'onChange',\n      'loadData',\n      'valueField',\n      'keyField',\n      'renderItem',\n      'options',\n    ]);\n    return (\n      <AutoComplete\n        value={value}\n        defaultActiveFirstOption={false}\n        onSelect={this.onSelect}\n        onChange={this.onSearch}\n        filterOption={(inputValue, option) =>\n          option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\n        }\n        {...autoComponentProps}\n        allowClear={false}\n      >\n        { loading ? (\n        <Input\n          suffix={<i className=\"las la-sync auto-complete-loading la-spin\" />}\n        />) : options.map(this.renderOptionItem)}\n      </AutoComplete>\n    );\n  }\n}\n\nAutoCompleteControlled.propTypes = {\n  value: PropTypes.any,\n  options: PropTypes.array,\n  optionLabelProp: PropTypes.array,\n  onChange: PropTypes.func,\n  keyField: PropTypes.string,\n  valueField: PropTypes.string,\n  render: PropTypes.func,\n  renderItem: PropTypes.func,\n  loadData: PropTypes.func\n};\n\nAutoCompleteControlled.defaultProps = {\n  keyField: \"value\",\n  valueField: \"label\",\n  options: [],\n};\n\nexport default ({\n  name,\n  formFieldOptions = {},\n  record,\n  initialValue,\n  rules,\n  onChange,\n  normalize,\n  getPopupContainer,\n  placeholder,\n  ...otherProps\n}) => {\n\n  let initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  }\n\n  // If there is an initial value\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = initval;\n    }\n  }\n\n  // If there are rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  // If you need onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = (value, option) =>\n      onChange(value, option); // value, option selected item\n  }\n\n  const props = {\n    placeholder: placeholder || `Please enter ${otherProps.title}`,\n    ...otherProps\n  };\n\n  if (getPopupContainer) {\n    props.getPopupContainer = getPopupContainer;\n  }\n\n  return <AutoCompleteControlled {...props} />;\n};\n","import React from 'react';\nimport { Cascader } from 'antd';\nimport $$ from 'cmn-utils';\n\n/**\n * Cascading form components\n * initialValue Initial value\n */\nexport default ({\n  name,\n  record,\n  formFieldOptions = {},\n  normalize,\n  initialValue,\n  rules,\n  onChange,\n  preview,\n  getPopupContainer,\n  placeholder,\n  ...otherProps\n}) => {\n\n  let initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  }\n\n  // If there is an initial value\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = initval;\n    }\n  }\n\n  if (preview) {\n    if (otherProps.options && initval) {\n      const data = [];\n      let level = 0;\n      const loop = opts => {\n        opts.forEach(item => {\n          if (item.value === initval[level]) {\n            data.push(item.label);\n            if (item.children && initval[++level]) {\n              loop(item.children);\n            }\n          }\n        });\n      };\n      loop(otherProps.options);\n      return <div style={otherProps.style}>{data.join(' / ')}</div>;\n    }\n    return null;\n  }\n\n  // If there are rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  // If you need onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = (value, selectedOptions) =>\n      onChange(value, selectedOptions); // value, selectedOptions\n  }\n\n  const props = {\n    placeholder: placeholder || `Please choose ${otherProps.title}`,\n    ...otherProps\n  };\n\n  if (getPopupContainer) {\n    props.getPopupContainer = getPopupContainer;\n  }\n\n  return <Cascader {...props} />;\n};\n","import React from 'react';\nimport { Checkbox } from 'antd';\nimport $$ from 'cmn-utils';\nimport omit from 'object.omit';\n\nconst CheckboxGroup = Checkbox.Group;\n/**\n * Single box\n */\nexport default ({\n  name,\n  dict = [],\n  formFieldOptions = {},\n  record,\n  initialValue,\n  rules,\n  onChange,\n  normalize,\n  buttonStyle = 'solid',\n  getPopupContainer,\n  preview,\n  ...otherProps\n}) => {\n  let initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  }\n\n  // If there is an initial value\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = initval;\n    }\n  }\n\n  // If there are rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  // Preview view\n  if (preview) {\n    const _initval = $$.isArray(initval) ? initval : [initval];\n    const dictObj = dict.filter(item => _initval.indexOf(item.code) !== -1);\n    let text = '';\n    if (dictObj.length) {\n      text = dictObj.map(item => item.codeName).join(',');\n    }\n    return <div style={otherProps.style}>{text}</div>;\n  }\n\n  // If you need onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = e => onChange(e.target.value, e); // value\n  }\n\n  const checkboxProps = omit(otherProps, 'allowClear');\n  return (\n    <CheckboxGroup {...checkboxProps}>\n      {dict.map((dic, i) => (\n        <Checkbox key={dic.code} value={dic.code} title={dic.codeName}>\n          {dic.codeName}\n        </Checkbox>\n      ))}\n    </CheckboxGroup>\n  );\n};\n","/**\n * Custom form components,\n * If you need to use form control in the column\n * \n    return form.getFieldDecorator('xxx')(\n      // ...\n    );\n */\nexport default ({render, record, ...otherProps}) => {\n  return render(record, otherProps);\n};","import React from 'react';\nimport { InputNumber } from 'antd';\nimport $$ from 'cmn-utils';\n\n/**\n * Digital input frame component\n */\nexport default ({\n  form,\n  name,\n  formFieldOptions = {},\n  initialValue,\n  normalize,\n  rules,\n  onChange,\n  preview,\n  placeholder,\n  getPopupContainer,\n  type,\n  ...otherProps\n}) => {\n  let initval = initialValue;\n\n  // If there is an initial value\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = initval;\n    }\n  }\n\n  if (preview) {\n    return <div style={otherProps.style}>{initval || ''}</div>;\n  }\n\n  // If there are rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  // If you need onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = value => onChange(form, value); // form, value, event\n  }\n\n  delete otherProps.render;\n\n  const props = {\n    placeholder: placeholder || `Please enter ${otherProps.title}`,\n    ...otherProps\n  };\n\n  return <InputNumber {...props} />;\n};\n","import React from 'react';\nimport { Radio } from 'antd';\nimport $$ from 'cmn-utils';\n\nconst RadioGroup = Radio.Group;\n/**\n * Single box\n */\nexport default ({\n  name,\n  dict = [],\n  formFieldOptions = {},\n  record,\n  initialValue,\n  rules,\n  onChange,\n  normalize,\n  buttonStyle,\n  getPopupContainer,\n  preview,\n  ...otherProps\n}) => {\n  let initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  }\n\n  // If there is an initial value\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = initval;\n    }\n  }\n\n  // Preview view\n  if (preview) {\n    const dictObj = dict.filter(item => item.code === initval)[0];\n    let text = '';\n    if (dictObj) {\n      text = dictObj.codeName;\n    }\n    return <div style={otherProps.style}>{text}</div>;\n  }\n\n  // If there are rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  // If you need onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = e => onChange(e.target.value, e); // value\n  }\n\n  let RadioComp = Radio;\n  if (buttonStyle === 'solid') RadioComp = Radio.Button;\n\n  return (\n    <RadioGroup {...otherProps}>\n      {dict.map((dic, i) => (\n        <RadioComp key={dic.code} value={dic.code} title={dic.codeName}>\n          {dic.codeName}\n        </RadioComp>\n      ))}\n    </RadioGroup>\n  );\n};\n","import React from 'react';\nimport { Select } from 'antd';\nimport $$ from 'cmn-utils';\n/**\n * Drop-down menu component\n */\nexport default ({\n  name,\n  dict = [],\n  formFieldOptions = {},\n  defaultValue,\n  rules,\n  onChange,\n  normalize,\n  getPopupContainer,\n  placeholder,\n  preview,\n  ...otherProps\n}) => {\n\n  let initval = defaultValue;\n\n  // If there is an initial value\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.defaultValue = normalize(initval);\n    } else {\n      formFieldOptions.defaultValue = initval;\n    }\n  }\n\n  // Preview view\n  if (preview) {\n    const _initval = $$.isArray(initval) ? initval : [initval];\n    const dictObj = dict.filter(item => _initval.indexOf(item.code) !== -1);\n    let text = '';\n    if (dictObj.length) {\n      text = dictObj.map(item => item.codeName).join(',');\n    }\n    return <div style={otherProps.style}>{text}</div>;\n  }\n\n  // If there are rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  // If you need onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = value => onChange(value); // value\n  }\n\n  const props = {\n    placeholder: placeholder || `Please choose ${otherProps.title}`,\n    showSearch: true,\n    optionFilterProp: 'title',\n    ...otherProps\n  };\n\n  if (getPopupContainer) {\n    props.getPopupContainer = getPopupContainer;\n  }\n\n  return (\n    <Select {...props}>\n      {dict.map((dic, i) => (\n        <Select.Option key={dic.code} value={dic.code} title={dic.codeName}>\n          {dic.codeName}\n        </Select.Option>\n      ))}\n    </Select>\n  );\n};\n","import React from 'react';\nimport { Switch } from 'antd';\n\n/**\n * Single box\n */\nexport default ({\n  initialValue,\n  record,\n  name,\n  ...otherProps\n}) => {\n  let checked = initialValue;\n\n  if (record) {\n    checked = record[name];\n  }\n\n  return (\n    <Switch\n      checkedChildren={<i className=\"las la-check\" />}\n      unCheckedChildren={<i className=\"las la-times\" />}\n      defaultChecked={checked}\n    />\n  );\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button, Select } from 'antd';\nimport $$ from 'cmn-utils';\nimport isEqual from 'react-fast-compare';\nimport assign from 'object-assign';\nimport intl from 'react-intl-universal';\n\nimport PageHelper from '@/utils/pageHelper';\nimport DataTable from 'components/DataTable';\nimport messages from '../messages';\n\nconst { Pagination } = DataTable;\nconst { Option } = Select;\n\n/**\n *  formItem: {\n      type: 'table',\n      rowKey: 'id',\n      dataSource,\n      columns: innerColumns,\n      onChange: (form, value) => console.log('。。。:', value),\n      loadData: self.onLoadTableData,\n      initialValue: [11, 3, 5],\n    }\n */\nclass TableControlled extends Component {\n  constructor(props) {\n    super(props);\n    const { dataSource, value } = props;\n    this.state = {\n      value: this.getKeys(value),\n      rows: this.getRows(value),\n      dataSource: dataSource || PageHelper.create(),\n      visible: false,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    const { loadData } = this.props;\n    if (loadData) {\n      this.onChange({ pageNum: 1 });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { dataSource, value, loadData } = this.props;\n    const { rows } = this.state;\n    if (\n      !isEqual(prevProps.dataSource, dataSource) ||\n      !isEqual(prevProps.value, value)\n    ) {\n      const _value = this.getKeys(value);\n      const newState = {\n        value: _value,\n        rows: this.getRows(_value, rows)\n      };\n      if (!loadData && dataSource) {\n        newState.dataSource = dataSource;\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  // Convert value to object array\n  getRows(value, oldValue = []) {\n    const { rowKey } = this.props;\n    if (value) {\n      return value.map(item => {\n        const oldv = oldValue.filter(jtem => jtem[rowKey] === item)[0];\n        return typeof item === 'object' ? item : oldv || { [rowKey]: item };\n      });\n    }\n    return [];\n  }\n\n  getKeys(value) {\n    const { rowKey } = this.props;\n    if (value) {\n      return value.map(item => ($$.isObject(item) ? item[rowKey] : item));\n    }\n    return [];\n  }\n\n  onSelect = (keys, newRows) => {\n    const { modal, onChange } = this.props;\n    let { rows } = this.state;\n\n    rows = [...rows, ...newRows];\n    this.setState({ value: keys, rows });\n\n    if (onChange && !modal) {\n      onChange(keys, rows);\n    }\n  };\n\n  async onChange({ pageNum, pageSize }) {\n    const { loadData } = this.props;\n    const { dataSource } = this.state;\n\n    if (loadData) {\n      this.setState({\n        loading: true\n      });\n\n      const newDataSource = await loadData(\n        dataSource.jumpPage(pageNum, pageSize)\n      );\n\n      this.setState({\n        loading: false,\n        dataSource: assign(dataSource, newDataSource)\n      });\n    }\n  }\n\n  onSelectChange = (value, option) => {\n    const { rowKey, onChange } = this.props;\n    const { rows } = this.state;\n    const newRows = rows.filter(item => value.indexOf(item[rowKey]) !== -1);\n    this.setState({\n      value,\n      rows: newRows\n    });\n    onChange && onChange(value, newRows);\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  onSubmit = () => {\n    const { value, rows } = this.state;\n    const { onChange } = this.props;\n    this.hideModal();\n    onChange && onChange(value, rows);\n  };\n\n  hideModal = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  render() {\n    const {\n      modal,\n      columns,\n      titleKey,\n      rowKey,\n      selectType,\n      showNum,\n      placeholder,\n      getPopupContainer,\n      disabled,\n      pagination,\n      ...otherProps\n    } = this.props;\n    const { dataSource, value, rows, loading, visible } = this.state;\n\n    const dataTableProps = {\n      loading,\n      columns,\n      rowKey,\n      dataItems: dataSource,\n      selectedRowKeys: value,\n      selectType: typeof selectType === 'undefined' ? 'checkbox' : selectType,\n      showNum: typeof showNum === 'undefined' ? true : showNum,\n      isScroll: true,\n      onChange: ({ pageNum, pageSize }) => this.onChange({ pageNum, pageSize }),\n      onSelect: this.onSelect,\n      pagination:\n        pagination === false\n          ? false\n          : {\n              showSizeChanger: false,\n              showQuickJumper: false,\n              ...pagination\n            }\n    };\n    if (modal || disabled) {\n      return (\n        <div>\n          <div onClick={disabled ? () => {} : this.showModal}>\n            <Select\n              readOnly\n              disabled={!!disabled}\n              mode=\"multiple\"\n              open={false}\n              value={titleKey ? value : value.length ? ['_selected'] : []}\n              onChange={this.onSelectChange}\n              placeholder={placeholder}\n            >\n              {titleKey ? (\n                rows.map(item => (\n                  <Option key={item[rowKey]} value={item[rowKey]}>\n                    {item[titleKey]}\n                  </Option>\n                ))\n              ) : (\n                <Option key=\"_selected\" value=\"_selected\">\n                  {intl.formatMessage(messages.chosen)} {value.length} {intl.formatMessage(messages.item)}\n                </Option>\n              )}\n            </Select>\n          </div>\n          <Modal\n            className=\"antui-table-modal\"\n            title={'Please choose ' + otherProps.title}\n            visible={visible}\n            width={modal.width || 600}\n            onCancel={this.hideModal}\n            footer={\n              <>\n                <div className=\"left\">\n                  {pagination === false ? null : (\n                    <Pagination\n                      key=\"paging\"\n                      size=\"small\"\n                      showSizeChanger={false}\n                      showQuickJumper={false}\n                      {...dataTableProps}\n                    />\n                  )}\n                </div>\n                <Button key=\"back\" onClick={this.hideModal}>\n                  {intl.formatMessage(messages.cancel)}\n                </Button>\n                <Button key=\"submit\" type=\"primary\" onClick={this.onSubmit}>\n                  {intl.formatMessage(messages.save)}\n                </Button>\n              </>\n            }\n            {...modal}\n          >\n            <DataTable {...dataTableProps} pagination={false} />\n          </Modal>\n        </div>\n      );\n    }\n\n    return <DataTable {...dataTableProps} />;\n  }\n}\n\nTableControlled.propTypes = {\n  value: PropTypes.array,\n  dataSource: PropTypes.object,\n  onChange: PropTypes.func,\n  modal: PropTypes.any,\n  rowKey: PropTypes.string,\n  loadData: PropTypes.func,\n  selectType: PropTypes.func,\n  showNum: PropTypes.func,\n  placeholder: PropTypes.string,\n  getPopupContainer: PropTypes.func,\n  disabled: PropTypes.bool,\n  columns: PropTypes.array,\n  titleKey: PropTypes.string,\n};\n\nTableControlled.defaultProps = {\n  value: [],\n  rowKey: 'id',\n  modal: {}\n};\n\n/**\n * TableForm component\n */\nexport default ({\n  form,\n  name,\n  formFieldOptions = {},\n  record,\n  defaultValue,\n  rules,\n  onChange,\n  dataSource,\n  normalize,\n  rowKey,\n  placeholder,\n  ...otherProps\n}) => {\n\n  let initval = defaultValue;\n\n  if (record) {\n    initval = record[name];\n  }\n\n  // If there is an initial value\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.defaultValue = normalize(initval);\n    } else {\n      formFieldOptions.defaultValue = initval;\n    }\n  }\n\n  // If there are rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  // If you need onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = (value, rows) => onChange(form, value, rows); // form, value\n  }\n\n  const props = {\n    placeholder: placeholder || `Please choose ${otherProps.title}`,\n    ...otherProps\n  };\n\n  return (\n    <TableControlled\n      dataSource={dataSource}\n      rowKey={rowKey || name}\n      {...props}\n    />\n  );\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Transfer, Modal, Select } from 'antd';\nimport intl from \"react-intl-universal\";\n\nimport messages from '../messages';\n\nconst { Option } = Select;\n/**\n *  formItem: {\n      type: 'transfer',\n      modal: true,\n      dataSource: employees,\n      normalize: (value) => value.map(item => item.key)\n    }\n */\nclass TransferControlled extends Component {\n  constructor(props) {\n    super(props);\n    const { dataSource, initialValues } = props;\n    this.state = {\n      value: initialValues || [],\n      dataSource: dataSource,\n      visible: false\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.initialValues !== prevProps.initialValues) {\n      this.setState({ value: this.props.initialValues });\n    }\n  }\n\n  triggerChange = (nextTargetKeys, direction, moveKeys) => {\n    const { modal, onChange } = this.props;\n    this.setState({ value: nextTargetKeys });\n\n    if (onChange && !modal) {\n      onChange(nextTargetKeys);\n    }\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true,\n      value: this.props.value\n    });\n  };\n\n  hideModal = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  onSubmit = () => {\n    const { onChange } = this.props;\n    const { value } = this.state;\n    this.setState({\n      visible: false\n    });\n    if (onChange) {\n      onChange(value);\n    }\n  };\n\n  onSelectChange = (value, option) => {\n    const { onChange } = this.props;\n    this.setState({\n      value\n    });\n    onChange && onChange(value);\n  };\n\n  render() {\n    const { title, modal, placeholder, ...otherProps } = this.props;\n    const { dataSource, value, visible } = this.state;\n\n    const comp = (\n      <Transfer\n        {...otherProps}\n        dataSource={dataSource}\n        titles={[intl.formatMessage(messages.source), intl.formatMessage(messages.aims)]}\n        targetKeys={value}\n        onChange={this.triggerChange}\n        render={item => item.title || item.label}\n      />\n    );\n    if (modal || otherProps.disabled) {\n      return (\n        <div>\n          <div onClick={otherProps.disabled ? () => {} : this.showModal}>\n            <Select\n              readOnly\n              disabled={!!otherProps.disabled}\n              mode=\"multiple\"\n              open={false}\n              value={otherProps.value}\n              onChange={this.onSelectChange}\n              placeholder={placeholder}\n            >\n              {otherProps.value &&\n                dataSource\n                  .filter(item => otherProps.value.indexOf(item.key) !== -1)\n                  .map(item => (\n                    <Option key={item.key} value={item.key}>\n                      {item.title || item.label}\n                    </Option>\n                  ))}\n            </Select>\n          </div>\n          <Modal\n            className=\"antui-transfer-modal\"\n            title={'Please choose ' + title}\n            visible={visible}\n            onOk={this.onSubmit}\n            onCancel={this.hideModal}\n            okText= {intl.formatMessage(messages.save)}\n            cancelText= {intl.formatMessage(messages.cancel)}\n            {...modal}\n          >\n            {comp}\n          </Modal>\n        </div>\n      );\n    }\n\n    return comp;\n  }\n}\n\nTransferControlled.propTypes = {\n  value: PropTypes.array,\n  dataSource: PropTypes.array,\n  onChange: PropTypes.func,\n  placeholder: PropTypes.string,\n  title: PropTypes.string,\n  modal: PropTypes.any,\n};\n\n/**\n * TransferForm component\n */\nexport default ({\n  name,\n  formFieldOptions = {},\n  record,\n  defaultValue,\n  rules,\n  onChange,\n  dataSource,\n  normalize,\n  placeholder,\n  getPopupContainer,\n  ...otherProps\n}) => {\n\n  let initval = defaultValue;\n\n  if (record) {\n    initval = record[name];\n  }\n\n  // If you need onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = value => onChange(value);\n  }\n\n  const props = {\n    placeholder: placeholder || `Please choose ${otherProps.title}`,\n    initialValues: initval,\n    ...otherProps\n  };\n\n  return <TransferControlled dataSource={dataSource} {...props} />;\n};\n","import React from 'react';\nimport { TreeSelect } from 'antd';\nimport $$ from 'cmn-utils';\n\n/**\n * Drop-down tree menu component\n */\nexport const TreeSelectForm = ({\n  name,\n  formFieldOptions = {},\n  children,\n  record,\n  initialValue,\n  normalize,\n  rules,\n  onChange,\n  getPopupContainer,\n  placeholder,\n  ...otherProps\n}) => {\n  // --\n\n  let initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  }\n\n  // If there is an initial value\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = initval;\n    }\n  }\n\n  // If there is a rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  // If you need onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = (value, label, extra) =>\n      onChange(value, label, extra); // value\n  }\n\n  const props = {\n    placeholder: placeholder || `Please choose ${otherProps.title}`,\n    ...otherProps\n  };\n\n  if (getPopupContainer) {\n    props.getPopupContainer = getPopupContainer;\n  }\n\n\n  return <TreeSelect {...props} />;\n};\n\nexport default TreeSelectForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport isEqual from 'react-fast-compare';\n\nfunction noop() {}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dataSource: []\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (!isEqual(nextProps.dataSource, prevState.dataSource)) {\n      return {\n        dataSource: nextProps.dataSource\n      };\n    }\n    return null;\n  }\n\n  handleDeleteItem = (e, items) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.props.onDeleteItem(items ? items : this.state.dataSource);\n  };\n\n  renderItem = (i, key) => {\n    const { render, titleKey, rowKey } = this.props;\n\n    let item = this.state.dataSource[i];\n\n    return (\n      <li\n        className=\"list-comp-item\"\n        data-key={item[rowKey]}\n        title={item[titleKey]}\n        key={item[rowKey]}\n      >\n        <span className=\"list-comp-item-body\">\n          {render ? render(item) : item.title}\n        </span>\n        <button\n          className={`list-comp-clear-item`}\n          onClick={e => this.handleDeleteItem(e, [item])}\n        >\n          <i className=\"las la-times\" />\n        </button>\n      </li>\n    );\n  };\n\n  render() {\n    const { prefixCls, notFoundContent, style, max } = this.props;\n\n    const listCls = classNames({\n      [prefixCls]: true\n    });\n\n    let unit = 'article';\n\n    return (\n      <div className={listCls} style={style}>\n        <div className={`${prefixCls}-header`}>\n          <span className={`${prefixCls}-header-selected`}>\n            <span>\n              {this.state.dataSource.length} {max ? ` / ${max}` : ''} {unit}\n            </span>\n            <span className={`${prefixCls}-header-title`}>\n              <button\n                className={`${prefixCls}-clear-all`}\n                onClick={e => this.handleDeleteItem(e)}\n              >\n                Delete all\n              </button>\n            </span>\n          </span>\n        </div>\n        <div className={`${prefixCls}-body`}>\n          <div className={`${prefixCls}-body-content`}>\n            {!!this.state.dataSource.length || (\n              <div className={`${prefixCls}-body-content-not-found`}>\n                {notFoundContent || 'The list is empty'}\n              </div>\n            )}\n            {this.state.dataSource.map((item, i) =>\n              this.renderItem(i, item[this.props.rowKey])\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nList.defaultProps = {\n  prefixCls: 'antui-transfer-tree-list',\n  dataSource: [],\n  rowKey: 'key',\n  onDeleteItem: noop,\n};\n\nList.propTypes = {\n  prefixCls: PropTypes.string,\n  dataSource: PropTypes.array,\n  rowKey: PropTypes.string,\n  style: PropTypes.object,\n  render: PropTypes.func,\n  onDeleteItem: PropTypes.func,\n  max: PropTypes.number,\n  notFoundContent: PropTypes.string,\n  titleKey: PropTypes.string,\n};\n\nexport default List\n","import React from 'react';\nimport { Input } from 'antd';\nimport PropTypes from 'prop-types';\n\nimport $$ from 'cmn-utils';\n\nclass Search extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '',\n    };\n    this.onChange = $$.debounce(props.onChange, 500);\n  }\n\n  handleChange = value => {\n    const onChange = this.props.onChange;\n    if (onChange) {\n      this.onChange(value);\n    }\n    this.setState({\n      value\n    })\n  };\n\n  handleClear = e => {\n    e.preventDefault();\n\n    const handleClear = this.props.handleClear;\n    if (handleClear) {\n      handleClear(e);\n    }\n    this.setState({\n      value: ''\n    })\n  };\n\n  render() {\n    const { placeholder, prefixCls } = this.props;\n    const icon =\n      this.state.value && this.state.value.length > 0 ? (\n        <button className={`${prefixCls}-action`} onClick={this.handleClear}>\n          <i className=\"las la-times-circle\" />\n        </button>\n      ) : (\n        <span className={`${prefixCls}-action`}>\n          <i className=\"las la-search\" />\n        </span>\n      );\n    return (\n      <div>\n        <Input\n          placeholder={placeholder}\n          className={prefixCls}\n          value={this.state.value}\n          ref=\"input\"\n          onChange={e => this.handleChange(e.target.value)}\n        />\n        {icon}\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  placeholder: PropTypes.string,\n  prefixCls: PropTypes.string,\n  onChange: PropTypes.func,\n  handleClear: PropTypes.func,\n};\n\nSearch.defaultProps = {\n  placeholder: ''\n};\n\nexport default Search;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tree, Spin } from 'antd';\n\nimport Search from './Search';\n\nfunction noop() {}\n\nclass ListTree extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expandedKeys: [],\n      autoExpandParent: true,\n      searchList: [],\n    };\n  }\n\n  handleFilter = value => {\n    this.renderFilterResult(value);\n    this.props.handleFilter(value);\n  };\n\n  handleClear = () => {\n    this.renderFilterResult('');\n    this.props.handleFilter('');\n  };\n\n  renderTreeNodes = data => {\n    const { treeKey, treeTitleKey, render } = this.props;\n\n    return data.map(item => {\n      const treeProps = {\n        ...item,\n        key: item[treeKey],\n        title: render ? render(item) : item[treeTitleKey],\n        dataRef: item\n      };\n\n      if (item.children) {\n        return (\n          <Tree.TreeNode {...treeProps}>\n            {this.renderTreeNodes(item.children)}\n          </Tree.TreeNode>\n        );\n      }\n      return <Tree.TreeNode {...treeProps} />;\n    });\n  };\n\n  renderFilterResult = filter => {\n    const { flatTreeData, treeTitleKey, asyncSearch } = this.props;\n    if (asyncSearch) {\n      const promise = asyncSearch(filter);\n      if (promise.then) {\n        promise.then(listItem => {\n          this.setState({\n            searchList: listItem\n          });\n        });\n      }\n    } else {\n      this.setState({\n        searchList: flatTreeData.filter(\n          item => item[treeTitleKey].indexOf(filter) >= 0\n        )\n      });\n    }\n  };\n\n  renderSearchItem = searchList => {\n    const { render } = this.props;\n\n    return searchList.map((item, index) => (\n      <li\n        className=\"list-comp-item\"\n        title={item[this.props.treeTitleKey]}\n        key={item[this.props.treeKey]}\n        onClick={() => this.handleSelect({ ...item, dataRef: item })}\n      >\n        <span className=\"list-comp-item-body\">\n          {render ? render(item) : item[this.props.treeTitleKey]}\n        </span>\n      </li>\n    ));\n  };\n\n  handleSelect = selectedItem => {\n    const { selectedKeys, selectedNodes, treeKey } = this.props;\n    let _selectedNodes = selectedNodes ? [...selectedNodes] : [];\n\n    if (\n      selectedKeys &&\n      selectedKeys.some(key => key === selectedItem[treeKey])\n    ) {\n      _selectedNodes = _selectedNodes.filter(\n        item => item[treeKey] !== selectedItem[treeKey]\n      );\n    } else {\n      _selectedNodes.push(selectedItem);\n    }\n    this.props.onTreeSelected(_selectedNodes);\n  };\n\n  onSelect = (_selectedKeys, info) => {\n    const {\n      selectedNodes,\n      selectedKeys,\n      loadData,\n      onTreeSelected,\n      treeKey,\n      treeTitleKey\n    } = this.props;\n    const node = { ...info.node } \n\n    if (info.selected && node) {\n      if (loadData && !node.isLeaf) {\n        return;\n      } else if (\n        node.children &&\n        node.children.length\n      ) {\n        this.onExpand([node.key], info);\n        return;\n      }\n    }\n\n    let targetNodes = info.selectedNodes.map(node => ({\n      [treeKey]: node[treeKey],\n      [treeTitleKey]: node[treeTitleKey],\n      // ...node.props,\n      ...node.dataRef\n    }));\n\n    // If it is asynchronous data, it needs to be combined with old data and de-duplicated.\n    if (loadData) {\n      let _selectedNodes = selectedNodes ? [...selectedNodes] : [];\n      if (!info.selected) {\n        // If the tree node is deselected, it is filtered first.\n        _selectedNodes = _selectedNodes.filter(\n          item => item[treeKey] !== node.key\n        );\n      }\n      const newNodes = selectedKeys\n        ? _selectedNodes.concat(\n            targetNodes.filter(item => selectedKeys.indexOf(item[treeKey]) < 0)\n          )\n        : targetNodes;\n      onTreeSelected(newNodes);\n    } else {\n      onTreeSelected(targetNodes);\n    }\n  };\n\n  onExpand = (expandedKeys, info) => {\n    const node = { ...info.node } \n\n    if (info.event && node.children) {\n      let concatKeys = [expandedKeys, this.state.expandedKeys].reduce((prev, next) =>\n          prev.filter(item => next.indexOf(item) === -1).concat(next)\n        );\n      if (this.state.expandedKeys.some(item => item === node.key)) {\n        concatKeys = concatKeys.filter(item => item !== node.key);\n      }\n\n      this.setState({ expandedKeys: concatKeys, autoExpandParent: false });\n    } else {\n      this.setState({ expandedKeys, autoExpandParent: false });\n    }\n  };\n\n  render() {\n    const {\n      prefixCls,\n      loading,\n      treeData,\n      titleText,\n      loadData,\n      filter,\n      showSearch,\n      style,\n      selectedKeys\n    } = this.props;\n\n    const { expandedKeys, autoExpandParent, searchList } = this.state;\n\n    let { searchPlaceholder, notFoundContent } = this.props;\n\n    const showTree = (\n      <Tree\n        loadData={loadData}\n        onSelect={this.onSelect}\n        onExpand={this.onExpand}\n        selectedKeys={selectedKeys || []}\n        expandedKeys={expandedKeys}\n        autoExpandParent={autoExpandParent}\n        treeData={treeData}\n        multiple\n      >\n      </Tree>\n    );\n\n    return (\n      <div className={prefixCls} style={style}>\n        <div className={`${prefixCls}-header tree-title`}>{titleText}</div>\n        <div\n          className={\n            showSearch\n              ? `${prefixCls}-body ${prefixCls}-body-with-search`\n              : `${prefixCls}-body`\n          }\n        >\n          {showSearch ? (\n            <div className={`${prefixCls}-body-search-wrapper`}>\n              <Search\n                prefixCls={`${prefixCls}-search`}\n                onChange={this.handleFilter}\n                handleClear={this.handleClear}\n                placeholder={searchPlaceholder || 'Enter search content'}\n              />\n            </div>\n          ) : null}\n          <div className={`${prefixCls}-body-content tree-content`}>\n            {filter ? (\n              <ul className=\"tree-filter-result\">\n                {this.renderSearchItem(searchList)}\n              </ul>\n            ) : null}\n            {treeData.length ? (\n              showTree\n            ) : (\n              <div className={`${prefixCls}-body-content-not-found`}>\n                {loading ? (\n                  <Spin spinning={loading} />\n                ) : (\n                  notFoundContent || \"The list is empty\"\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nListTree.defaultProps = {\n  dataSource: [],\n  titleText: '',\n  treeKey: 'key',\n  treeTitleKey: 'title',\n  showSearch: false,\n  handleClear: noop,\n  handleFilter: noop,\n  handleSelect: noop,\n  handleSelectAll: noop\n};\n\nListTree.propTypes = {\n  prefixCls: PropTypes.string,\n  treeData: PropTypes.array,\n  selectedKeys: PropTypes.array,\n  showSearch: PropTypes.bool,\n  loadData: PropTypes.func,\n  searchPlaceholder: PropTypes.string,\n  titleText: PropTypes.string,\n  treeKey: PropTypes.string,\n  treeTitleKey: PropTypes.string,\n  style: PropTypes.object,\n  selectedNodes: PropTypes.array,\n  handleClear: PropTypes.func,\n  notFoundContent: PropTypes.string,\n  filter: PropTypes.string,\n  handleFilter: PropTypes.func,\n  treeRender: PropTypes.func,\n  asyncSearch: PropTypes.func,\n  onTreeSelected: PropTypes.func,\n  loading: PropTypes.bool,\n  flatTreeData: PropTypes.array,\n  render: PropTypes.func,\n};\n\nexport default ListTree;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport List from './List';\nimport ListTree from './ListTree';\n\nimport './style/index.less';\n\nfunction noop() {}\n\nclass TransferTree extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      leftFilter: '',\n      rightFilter: '',\n      dataSource: props.dataSource,\n      targetNodes: props.targetNodes,\n      selectedKeys: props.targetNodes\n        ? props.targetNodes.map(node => node[props.treeKey])\n        : null\n    };\n    if (props.showSearch) {\n      this.flatTreeData = this.getFlatTreeData(props.dataSource);\n    }\n  }\n\n  getFlatTreeData(treeData) {\n    let data = [];\n    treeData.forEach(item => {\n      if (item.children) {\n        data = data.concat(this.getFlatTreeData(item.children));\n      } else {\n        data.push(item);\n      }\n    });\n    return data;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.targetNodes !== prevProps.targetNodes ||\n      this.props.dataSource !== prevProps.dataSource\n    ) {\n      if (this.props.targetNodes) {\n        this.setState({\n          targetNodes: this.props.targetNodes,\n          selectedKeys: this.props.targetNodes.map(node => node[this.props.treeKey])\n        });\n      }\n      if (this.props.dataSource) {\n        this.setState({\n          dataSource: this.props.dataSource\n        });\n      }\n      if (this.props.showSearch) {\n        this.flatTreeData = this.getFlatTreeData(this.props.dataSource);\n      }\n    }\n  }\n\n  handleFilter = (direction, v) => {\n    this.setState({\n      [`${direction}Filter`]: v\n    });\n  };\n\n  handleLeftFilter = v => this.handleFilter('left', v);\n  handleRightFilter = v => this.handleFilter('right', v);\n\n  handleClear = direction => {\n    this.setState({\n      [`${direction}Filter`]: ''\n    });\n  };\n\n  handleRightClear = () => this.handleClear('right');\n  handleDeleteItem = nodes => {\n    const { treeKey } = this.props;\n    const targetNodes = this.state.targetNodes.filter(\n      node => !nodes.some(item => item[treeKey] === node[treeKey])\n    );\n    const targetKeys = targetNodes.map(node => node[treeKey]);\n\n    this.setState({\n      selectedKeys: targetKeys,\n      targetNodes: targetNodes\n    });\n\n    this.props.onChange && this.props.onChange(targetKeys, targetNodes);\n  };\n\n  onTreeSelected = selectedNodes => {\n    const { treeKey, max } = this.props;\n\n    if (max && selectedNodes.length > max) {\n      console.error('error, selected number > max');\n      const { targetKeys, targetNodes } = this.state;\n      this.props.onChange &&\n        this.props.onChange(targetKeys, targetNodes, 'OutOfMaxSize');\n      return;\n    }\n\n    const targetKeys = selectedNodes.map(node => node[treeKey]);\n\n    this.setState({\n      selectedKeys: targetKeys,\n      targetNodes: selectedNodes\n    });\n\n    this.props.onChange && this.props.onChange(targetKeys, selectedNodes);\n  };\n\n  render() {\n    const {\n      prefixCls,\n      titleText,\n      showSearch,\n      notFoundContent,\n      treeKey,\n      treeTitleKey,\n      searchPlaceholder,\n      footer,\n      listStyle,\n      className,\n      listRender,\n      treeRender,\n      loadData,\n      loading,\n      asyncSearch,\n      max\n    } = this.props;\n    const {\n      leftFilter,\n      rightFilter,\n      selectedKeys,\n      targetNodes,\n      dataSource\n    } = this.state;\n\n    const cls = classNames({\n      [className]: !!className,\n      [prefixCls]: true\n    });\n\n    return (\n      <div className={cls}>\n        <ListTree\n          titleText={titleText}\n          loadData={loadData}\n          asyncSearch={asyncSearch}\n          treeData={dataSource}\n          flatTreeData={this.flatTreeData}\n          selectedKeys={selectedKeys}\n          selectedNodes={targetNodes}\n          treeKey={treeKey}\n          treeTitleKey={treeTitleKey}\n          render={treeRender}\n          style={listStyle}\n          filter={leftFilter}\n          handleFilter={this.handleLeftFilter}\n          onTreeSelected={this.onTreeSelected}\n          showSearch={showSearch}\n          searchPlaceholder={searchPlaceholder}\n          notFoundContent={notFoundContent}\n          footer={footer}\n          prefixCls={`${prefixCls}-list`}\n          loading={loading}\n        />\n        <div className={`${prefixCls}-operation`}>\n          <i className=\"las la-angle-right\" />\n        </div>\n        <List\n          filter={rightFilter}\n          dataSource={targetNodes}\n          style={listStyle}\n          onDeleteItem={this.handleDeleteItem}\n          render={listRender}\n          notFoundContent={notFoundContent}\n          prefixCls={`${prefixCls}-list`}\n          max={max}\n        />\n      </div>\n    );\n  }\n}\n\nTransferTree.defaultProps = {\n  prefixCls: 'antui-transfer-tree',\n  dataSource: [],\n  onChange: noop,\n  titleText: 'Source list',\n  treeKey: 'key',\n  treeTitleKey: 'title',\n  showSearch: false,\n  footer: noop,\n  loading: false,\n};\n\nTransferTree.propTypes = {\n  prefixCls: PropTypes.string,\n  dataSource: PropTypes.array,\n  targetNodes: PropTypes.array,\n  onChange: PropTypes.func,\n  listStyle: PropTypes.object,\n  listRender: PropTypes.func,\n  treeKey: PropTypes.string,\n  treeTitleKey: PropTypes.string,\n  className: PropTypes.string,\n  titleText: PropTypes.string,\n  showSearch: PropTypes.bool,\n  searchPlaceholder: PropTypes.string,\n  notFoundContent: PropTypes.node,\n  footer: PropTypes.func,\n  treeRender: PropTypes.func,\n  loadData: PropTypes.func,\n  loading: PropTypes.bool,\n  asyncSearch: PropTypes.func,\n  max: PropTypes.number\n};\n\nexport default TransferTree;","import TransferTree from './TransferTree';\n\nexport default TransferTree;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Select } from 'antd';\nimport $$ from 'cmn-utils';\nimport intl from 'react-intl-universal';\n\nimport TransferTree from 'components/TransferTree';\nimport messages from '../messages';\n\nconst { Option } = Select;\n\n/**\n *  formItem: {\n      type: 'transfer',\n      modal: true,\n      dataSource: employees,\n      normalize: (value) => value.map(item => item.key)\n    }\n */\nclass TransferTreeControlled extends Component {\n  constructor(props) {\n    super(props);\n    const { value, dataSource } = props;\n    this.state = {\n      value: value,\n      dataSource: dataSource,\n      visible: false\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.value !== prevProps.value) {\n      this.setState({ value: this.props.value });\n    }\n  }\n\n  triggerChange = (targetKeys, targetNodes) => {\n    const { modal, onChange } = this.props;\n    this.setState({ value: targetNodes });\n\n    if (onChange && !modal) {\n      onChange(targetNodes);\n    }\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  hideModal = () => {\n    this.setState({\n      visible: false\n    });\n  };\n\n  onSelectChange = (value, option) => {\n    const { onChange } = this.props;\n    this.setState({\n      value\n    });\n    onChange && onChange(value);\n  };\n\n  render() {\n    const { modal, placeholder, ...otherProps } = this.props;\n    const { dataSource, value } = this.state;\n    const comp = (\n      <TransferTree\n        {...otherProps}\n        dataSource={dataSource}\n        targetNodes={value}\n        onChange={this.triggerChange}\n      />\n    );\n\n    if (modal || otherProps.disabled) {\n      return (\n        <div>\n          <div onClick={otherProps.disabled ? () => {} : this.showModal}>\n            <Select\n              readOnly\n              disabled={!!otherProps.disabled}\n              mode=\"multiple\"\n              open={false}\n              value={otherProps.value}\n              onChange={this.onSelectChange}\n              placeholder={placeholder}\n            >\n              {otherProps.value &&\n                dataSource\n                  .filter(item => otherProps.value.indexOf(item.key) !== -1)\n                  .map(item => (\n                    <Option key={item.key} value={item.key}>\n                      {item.title || item.label}\n                    </Option>\n                  ))}\n            </Select>\n          </div>\n          <Modal\n            className=\"antui-transfer-modal\"\n            title={'Please choose ' + otherProps.title}\n            visible={this.state && this.state.visible}\n            width={modal.width || 480}\n            onOk={this.hideModal}\n            onCancel={this.hideModal}\n            okText= {[intl.formatMessage(messages.save)]}\n            cancelText= {[intl.formatMessage(messages.cancel)]}\n            {...modal}\n          >\n            {comp}\n          </Modal>\n        </div>\n      );\n    }\n\n    return comp;\n  }\n}\n\nTransferTreeControlled.propTypes = {\n  value: PropTypes.array,\n  dataSource: PropTypes.array,\n  placeholder: PropTypes.string,\n  modal: PropTypes.object,\n  onChange: PropTypes.func\n};\n\n/**\n * TransferTreeForm component\n */\nexport default ({\n  form,\n  name,\n  formFieldOptions = {},\n  record,\n  initialValue,\n  rules,\n  onChange,\n  dataSource,\n  normalize,\n  placeholder,\n  getPopupContainer,\n  ...otherProps\n}) => {\n  const { getFieldDecorator } = form;\n\n  let initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  }\n\n  // If there is an initial value\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = initval;\n    }\n  }\n\n  // If there are rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  // If you need onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = value => onChange(form, value); // form, value\n  }\n\n  const props = {\n    placeholder: placeholder || `Please choose ${otherProps.title}`,\n    ...otherProps\n  };\n\n  return getFieldDecorator(name, formFieldOptions)(\n    <TransferTreeControlled dataSource={dataSource} {...props} />\n  );\n};\n","export default {\n  zIndex: 1,\n  iframe: true,\n  iframeCSSLinks: [\n    \"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.0/css/bootstrap.css\",\n  ],\n  uploader: {\n    insertImageAsBase64URI: true\n  },\n  buttons: \"source,fullsize,|,bold,italic,underline,paragraph,align,|,ul,ol,outdent,indent,hr,|,image,video,table,link,|,superscript,subscript,strikethrough,font,fontsize,brush,eraser\",\n  buttonsMD: \"source,fullsize,|,bold,italic,underline,paragraph,align,|,ul,ol,outdent,indent,hr,|,image,video,table,link,|,dots\",\n  buttonsSM: \"source,fullsize,|,bold,italic,underline,paragraph,align,|,image,video,table,link,|,dots\",\n  buttonsXS: \"bold,italic,underline,paragraph,align,|,dots\",\n  toolbarButtonSize: \"small\",\n  events: {\n    afterInit: function (editor) {\n      setTimeout(() => {\n        const iframeJSLinks = [\n          \"https://code.jquery.com/jquery-2.1.3.min.js\",\n          \"https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.5.0/js/bootstrap.js\",\n        ];\n        editor.iframe.contentDocument.getElementsByTagName(\"html\")[0]\n          .setAttribute(\"style\", \"overflow-y: auto\")\n        iframeJSLinks.forEach(href => {\n          const script = editor.iframe.contentDocument.createElement(\"script\");\n\n          script.setAttribute(\"src\", href);\n          script.setAttribute(\"type\", \"text/javascript\");\n\n          editor.iframe.contentDocument.head && editor.iframe.contentDocument.head.appendChild(script);\n        });\n      }, 1000)\n    }\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport JoditEditor from \"jodit-react\";\nimport $$ from 'cmn-utils';\n\nimport defaultConfig from './config';\nimport './style/index.less';\n\nconst { debounce } = $$;\n\nclass Editor extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: props.value\n    };\n    // Set this value to control the synchronization speed. If the speed is too fast, it will affect the input experience. If it is too slow, the old value may be obtained.\n    // If the experience is too bad, it is recommended not to return the value, use onLoaded to get the wangeditor instance\n    this._onChange = debounce(this.onChange, 2000);\n  }\n\n  // componentDidMount() {\n  // }\n  //\n  // componentDidUpdate(prevProps, prevState) {\n  // }\n\n  onChange = html => {\n    const { onChange } = this.props;\n    if (onChange) onChange(html);\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <JoditEditor\n        ref=\"editor\"\n        value={value}\n        config={defaultConfig}\n        tabIndex={1} // tabIndex of textarea\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nEditor.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  otherProps: PropTypes.any,\n};\n\n\nexport default Editor;\n","import Editor from './Editor';\n\nexport default Editor;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport $$ from 'cmn-utils';\nimport omit from 'object.omit';\n\nimport Editor from 'components/Editor';\n\nclass EditorControlled extends Component {\n  constructor(props) {\n    super(props);\n    const { value } = props;\n    this.state = {\n      value\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.value !== prevProps.value) {\n      this.setState({ value: this.props.value });\n    }\n  }\n\n  triggerChange = value => {\n    const onChange = this.props.onChange;\n    if (onChange) {\n      onChange(value);\n    }\n  };\n\n  render() {\n    const { value } = this.state;\n    const otherProps = omit(this.props, 'value');\n\n    return (\n      <Editor value={value} onChange={this.triggerChange} {...otherProps} />\n    );\n  }\n}\n\nEditorControlled.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func\n};\n\n/**\n * EditorForm component\n */\nexport default ({\n  name,\n  formFieldOptions = {},\n  record,\n  initialValue,\n  rules,\n  onChange,\n  normalize,\n  preview,\n  getPopupContainer,\n  ...otherProps\n}) => {\n\n  let initval = initialValue;\n\n  if (record) {\n    initval = record[name];\n  }\n\n  // If there is an initial value\n  if (initval !== null && typeof initval !== 'undefined') {\n    if ($$.isFunction(normalize)) {\n      formFieldOptions.initialValue = normalize(initval);\n    } else {\n      formFieldOptions.initialValue = initval;\n    }\n  }\n\n  if (preview) {\n    return (\n      <div\n        style={otherProps.style}\n        dangerouslySetInnerHTML={{ __html: initval || '' }}\n      />\n    );\n  }\n\n  // If there are rules\n  if (rules && rules.length) {\n    formFieldOptions.rules = rules;\n  }\n\n  // If you need onChange\n  if (typeof onChange === 'function') {\n    formFieldOptions.onChange = value => onChange(value); // value\n  }\n\n  return <EditorControlled {...otherProps} />;\n};\n","import axios from 'axios';\nimport config from '@/config';\n\nexport async function getList_MEDIA(path) {\n  const { data } = await axios.get('/media', {params: { path } });\n  return data;\n}\n\nexport async function save_MEDIA(payload) {\n  const { data } = await axios.post('/media', payload);\n  if (data.message) config.notice.success(data.message);\n  return data;\n}\n\nexport async function delete_MEDIA(params) {\n  const {data} = await axios.delete('/media/id',{ params });\n  if (data.message) config.notice.success(data.message);\n  return null;\n}\n","export const scope = 'components.Media';\n\nexport default {\n  name: {\n    id: `${scope}.name`,\n    defaultMessage: 'Name',\n  },\n  size: {\n    id: `${scope}.size`,\n    defaultMessage: 'Size',\n  },\n  lastModified: {\n    id: `${scope}.lastModified`,\n    defaultMessage: 'Last Modified',\n  },\n  detail: {\n    id: `${scope}.detail`,\n    defaultMessage: 'Detail',\n  },\n  areYouSure: {\n    id: `${scope}.areYouSure`,\n    defaultMessage: 'Are you sure?',\n  },\n  nameFolder: {\n    id: `${scope}.nameFolder`,\n    defaultMessage: 'Name Folder',\n  },\n  pleaseEnterNameFolder: {\n    id: `${scope}.pleaseEnterNameFolder`,\n    defaultMessage: 'Please enter name folder',\n  },\n  onlyLettersAndDigitsAllowed: {\n    id: `${scope}.onlyLettersAndDigitsAllowed`,\n    defaultMessage: 'Only letters and digits allowed',\n  },\n  link: {\n    id: `${scope}.link`,\n    defaultMessage: 'Link',\n  },\n  pleaseEnterNameLink: {\n    id: `${scope}.pleaseEnterNameLink`,\n    defaultMessage: 'Please enter name Link',\n  },\n  incorrectPathFormat: {\n    id: `${scope}.incorrectPathFormat`,\n    defaultMessage: 'Incorrect path format',\n  },\n  title: {\n    id: `${scope}.title`,\n    defaultMessage: 'Media Management',\n  },\n  myFile: {\n    id: `${scope}.myFile`,\n    defaultMessage: 'My file',\n  },\n  outsideLink: {\n    id: `${scope}.outsideLink`,\n    defaultMessage: 'Outside Link',\n  },\n  createFolder: {\n    id: `${scope}.createFolder`,\n    defaultMessage: 'Create Folder',\n  },\n  uploadFile: {\n    id: `${scope}.uploadFile`,\n    defaultMessage: 'Upload File',\n  },\n  upload: {\n    id: `${scope}.upload`,\n    defaultMessage: 'Upload',\n  },\n  upToFolder: {\n    id: `${scope}.upToFolder`,\n    defaultMessage: 'Up to Folder',\n  },\n  multiImages: {\n    id: `${scope}.multiImages`,\n    defaultMessage: 'Multi Images',\n  },\n  addImages: {\n    id: `${scope}.addImages`,\n    defaultMessage: 'Add Images',\n  },\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Breadcrumb, Card, Col, Modal, Row, Drawer, Upload, Popover, Popconfirm, Spin, Tabs, Badge, Checkbox } from 'antd';\nimport Button from 'components/Button';\n\nimport intl from 'react-intl-universal';\nimport $$ from \"cmn-utils\";\n\nimport Form from 'components/Form';\nimport { getList_MEDIA, save_MEDIA, delete_MEDIA } from \"./service\";\nimport messages from './messages';\n\nimport './style/index.less';\n\nconst { TabPane } = Tabs;\n\nclass MediaManagement extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visibleDraw: false,\n      loading: true,\n      url: \"/\",\n      data: [],\n      status: 1,\n      multi: false,\n      images: [],\n    }\n    this.getList(\"/\");\n  }\n\n  getList = async (url) => {\n    const data = await getList_MEDIA(url);\n    this.setState({ data, url, loading: false })\n  }\n\n  url = (index = 1) => {\n    const { url } = this.state;\n    this.setState({ loading: true })\n    const array = url.split(\"/\");\n    if (array.length > 2) {\n      return this.getList(array.slice(0, index).join(\"/\") + '/');\n    }\n    return this.getList(\"/\");\n  }\n\n  onSubmit = async (value) => {\n    const { url } = this.state;\n    this.setState({ loading: true })\n    value.type = \"folder\";\n    value.path = url;\n    await save_MEDIA(value)\n    await this.getList(url);\n  }\n\n  detail = item => (\n    <>\n      <div>{intl.formatMessage(messages.name)}: {item.name}</div>\n      {item.type !== \"folder\" && (\n        <>\n          <div>{intl.formatMessage(messages.size)}: {item.size}</div>\n          <div>{intl.formatMessage(messages.lastModified)}: {item.lastModified}</div>\n        </>\n      )}\n    </>\n  )\n\n  handleDelete = async file => {\n    const { url } = this.state;\n    this.setState({ loading: true })\n    try {\n      await delete_MEDIA({\n        path: file.origin,\n        type: file.type,\n      });\n      await this.getList(url);\n    } catch {\n      this.setState({ loading: false })\n    }\n  }\n\n  button = (type) => {\n    switch (type) {\n      case \"zip\":\n        return <i className=\"las la-file-archive\" />\n      case \"pdf\":\n        return <i className=\"las la-file-pdf\" />\n      case \"file\":\n        return <i className=\"las la-file-alt\" />\n      case \"video\":\n        return <i className=\"las la-film\" />\n      case \"image\":\n        return <i className=\"las la-image\" />\n      default:\n        break;\n    }\n  }\n\n  title = (file) => {\n    const { onSelect } = this.props;\n    return (\n      <Row justify=\"space-between\" align=\"middle\">\n        <div>{intl.formatMessage(messages.detail)}</div>\n        <Button.Group>\n          <Button size=\"small\" type=\"link\" onClick={() => onSelect(file.url, file.type)}>\n            { this.button(file.type) }\n          </Button>\n\n          <Popconfirm\n            title={intl.formatMessage(messages.areYouSure)}\n            icon={<i className=\"las la-question-circle\" />}\n            onConfirm={() => this.handleDelete(file)}\n          >\n            <Button size=\"small\" type=\"link\" danger>\n              <i className=\"las la-trash-alt\" />\n            </Button>\n          </Popconfirm>\n        </Button.Group>\n      </Row>\n    )\n  }\n\n  render() {\n    const { visible, onHide, onSelect, limit } = this.props;\n    const { visibleDraw, status, data, url, loading, multi, images } = this.state;\n    if (multi && limit < 2) this.setState({ multi: false })\n    const props = {\n      action: '/api/v1/media',\n      headers: { Authorization: $$.getStore(\"user\").token },\n      listType: 'picture',\n      className: \"upload-block\",\n      data: (file) => {\n        return {\n          file,\n          path: url\n        }\n      },\n      onChange: (data) => {\n        if (data.file.percent === 100 && data.event) {\n          setTimeout(() => this.getList(url), 500)\n        }\n      }\n    };\n    const formProps = {\n      loading,\n      columns: [\n        {\n          title: intl.formatMessage(messages.nameFolder),\n          name: \"name\",\n          formItem: {\n            rules: [\n              { required: true, message: intl.formatMessage(messages.pleaseEnterNameFolder) },\n              { validator:(_, value) => /^[a-zA-Z\\d]+$/.test(value) ? Promise.resolve() : Promise.reject(intl.formatMessage(messages.onlyLettersAndDigitsAllowed)) }\n            ]\n          }\n        }\n      ],\n      formItemLayout: {\n        labelCol: { span: 24 },\n        wrapperCol: { span: 24 }\n      },\n      onSubmit: this.onSubmit\n    };\n    const formOutsideProps = {\n      loading,\n      columns: [\n        {\n          title: intl.formatMessage(messages.link),\n          name: \"link\",\n          formItem: {\n            rules: [\n              { required: true, message: intl.formatMessage(messages.pleaseEnterNameLink) },\n              { type: \"url\", message: intl.formatMessage(messages.incorrectPathFormat) },\n            ]\n          }\n        }\n      ],\n      formItemLayout: {\n        labelCol: { span: 24 },\n        wrapperCol: { span: 24 }\n      },\n      onSubmit: (value) => {\n        onSelect(value.link, 'image')\n      }\n    };\n\n    return (\n      <>\n        <Modal\n          className=\"media-management\"\n          title={intl.formatMessage(messages.title)}\n          width={700}\n          visible={visible}\n          footer={null}\n          onCancel={onHide}\n        >\n          <Tabs defaultActiveKey=\"1\">\n            <TabPane tab={intl.formatMessage(messages.myFile)} key=\"1\">\n              <Row justify=\"space-between\" style={{paddingBottom: \"10px\"}}>\n                <Col>\n                  <Breadcrumb>\n                    {url.split(\"/\").map((item, index) => {\n                      return (\n                        <Breadcrumb.Item key={index} onClick={() => this.url(index + 1)}>\n                          {index === 0 ? <i className=\"las la-home\" /> : item}\n                        </Breadcrumb.Item>\n                      )\n                    })}\n                  </Breadcrumb>\n                </Col>\n                <Col>\n                  <Button.Group>\n                    {(multi && images.length && limit > 1) ? (\n                      <Button tooltip={intl.formatMessage(messages.addImages)} type=\"primary\" size=\"small\" onClick={() => {\n                        images.map((url, index) => { if (index < limit) onSelect(url, 'image')});\n                        this.setState({images: []})\n                      }}>\n                        <i className=\"las la-plus-square\" />\n                      </Button>\n                    ) : null}\n                    <Button tooltip={intl.formatMessage(messages.multiImages)} danger={multi} type=\"primary\" size=\"small\" onClick={() => this.setState({ multi: !multi })}>\n                      <i className=\"las la-images\" />\n                    </Button>\n                    <Button tooltip={intl.formatMessage(messages.createFolder)} type=\"primary\" size=\"small\" onClick={() => this.setState({ visibleDraw: true, status: 1 })}>\n                      <i className=\"las la-folder-plus\" />\n                    </Button>\n                    <Button tooltip={intl.formatMessage(messages.uploadFile)} type=\"primary\" size=\"small\" onClick={() => this.setState({ visibleDraw: true, status: 2 })}>\n                      <i className=\"las la-file-upload\" />\n                    </Button>\n                  </Button.Group>\n                </Col>\n              </Row>\n              <Spin spinning={loading}>\n                <Row gutter={[16, 16]} align=\"middle\">\n                  { url.slice(1).split(\"/\").length > 1 && (\n                    <Col span={6}>\n                      <Card\n                        onClick={() => !multi && this.url(url.split(\"/\").length - 2)}\n                        bodyStyle={{padding: 10, textAlign: \"center\"}}\n                        hoverable\n                      >\n                        <i className=\"las la-level-up-alt la-3x\" />\n                        <div>{intl.formatMessage(messages.upToFolder)}</div>\n                      </Card>\n                    </Col>\n                  )}\n                  {data.map((item, index) => (\n                    <Col span={6} key={index}>\n                      <Popover content={this.detail(item)} title={this.title(item)}>\n                        <Badge count={(item.type !== \"folder\" && multi) ? <Checkbox checked={images.indexOf(item.url) > -1} /> : null }>\n                          <Card\n                            onClick={() => {\n                              if (!multi) (item.type === \"folder\" ? this.getList(url + item.name + \"/\") : onSelect(item.url, item.type))\n                              else if (item.type !== \"folder\"){\n                                if (images.indexOf(item.url) === -1 ) images.push(item.url);\n                                else images.splice(images.indexOf(item.url), 1);\n                                this.setState({images: images})\n                              }\n                            }}\n                            bodyStyle={{padding: item.type !== \"folder\" ? 0 : 10, textAlign: \"center\"}}\n                            hoverable\n                            cover={item.type !== \"folder\" && <img alt=\"example\" src={item.url} />}\n                          >\n                            {item.type === \"folder\" && (\n                              <>\n                                <i className=\"las la-folder-open la-3x\" />\n                                <div>{item.name}</div>\n                              </>\n                            )}\n                          </Card>\n                        </Badge>\n                      </Popover>\n                    </Col>\n                  ))}\n                </Row>\n              </Spin>\n            </TabPane>\n            <TabPane tab={intl.formatMessage(messages.outsideLink)} key=\"2\">\n              <Form ref=\"form\" {...formOutsideProps} />\n            </TabPane>\n          </Tabs>\n        </Modal>\n        <Drawer\n          title={status === 1 ? intl.formatMessage(messages.createFolder) : intl.formatMessage(messages.uploadFile)}\n          placement=\"right\"\n          closable={false}\n          onClose={() => this.setState({ visibleDraw: false })}\n          visible={visibleDraw}\n        >\n          { status === 1 ? (\n            <Form ref=\"form\" {...formProps} />\n          ) : (\n            <Upload {...props}>\n              <Button block>\n                <i className=\"las la-file-upload\" /> {intl.formatMessage(messages.upload)}\n              </Button>\n            </Upload>\n          )}\n        </Drawer>\n      </>\n    );\n  }\n}\nMediaManagement.propTypes = {\n  visible: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired,\n  onSelect: PropTypes.func.isRequired,\n}\n\nMediaManagement.defaultProps = {\n}\nexport default MediaManagement;\n","import React, {Component} from 'react';\nimport { Row, Col, Badge } from 'antd';\nimport MediaManagement from 'components/MediaManagement';\nimport PropTypes from \"prop-types\";\n\nclass MediaControlled extends Component {\n  constructor(props) {\n    super(props);\n    let values = []\n    if (props.value) {\n      values = props.limit === 1 ? [props.value] : JSON.parse(props.value);\n    }\n    this.state = {\n      visible: false,\n      url: values,\n      index: -1,\n    };\n  }\n  onSelect = (newUrl, type) => {\n    const { onChange, limit } = this.props;\n    const { url, index } = this.state;\n    if (index > -1) {\n      if (newUrl) {\n        url[index] = newUrl;\n      } else {\n        url.splice(index, 1);\n      }\n    } else if (newUrl) {\n      url.push(newUrl);\n    }\n    if (limit === 1) {\n      onChange(newUrl);\n    } else {\n      onChange(JSON.stringify(url))\n    }\n    this.setState({ visible: false, url })\n  };\n\n  render() {\n    const { limit, onChange } = this.props;\n    const { visible, url } = this.state;\n    const propsMedia = {\n      visible,\n      onHide: () => this.setState({ visible: false }),\n      onSelect: this.onSelect,\n      limit: limit - url.length,\n    }\n    return (\n      <>\n        <Row gutter={[10, 10]}>\n        {url.map((item, index) => (\n          <Col key={index}>\n            <Badge count={<i className=\"las la-times-circle\" onClick={() => {\n              url.splice(index, 1);\n              onChange(JSON.stringify(url))\n            }} />}>\n              <div className=\"media-item\" onClick={() => this.setState({ visible: true, index })}>\n                <img src={item} alt=\"avatar\" style={{ width: '100%' }} />\n              </div>\n            </Badge>\n          </Col>\n        ))}\n        { url.length < limit && (\n          <Col>\n            <div className=\"media-item\" onClick={() => this.setState({ visible: true, index: -1 })}>\n              <i className=\"las la-plus la-3x\" />\n            </div>\n          </Col>\n        )}\n        </Row>\n        <MediaManagement { ...propsMedia }/>\n      </>\n    )\n  }\n}\nMediaControlled.propTypes = {\n  value: PropTypes.string,\n  limit: PropTypes.number,\n  onChange: PropTypes.func,\n};\n\nMediaControlled.defaultProps = {\n  limit: 1,\n};\n\nexport default ({\n  ...otherProps\n}) => <MediaControlled {...otherProps} />;\n"],"sourceRoot":""}