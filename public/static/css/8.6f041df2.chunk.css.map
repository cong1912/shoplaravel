{"version":3,"sources":["../../../../node_modules/antd/lib/style/color/colorPalette.less","index.less"],"names":[],"mappings":"AAAC,mBCOC,iBAAA,CACA,eAAA,CACA,eAAA,CACA,eAAA,CACA,aAAA,CACA,cAAA,CACA,+BAJF,CDTC,8BCeG,WAAA,CACA,eAHJ,CDbC,iCCoBG,oBAAA,CACA,eAAA,CACA,eAAA,CACA,qBAAA,CACA,iBAAA,CACA,SAJJ,CDrBC,wCC2BK,cAHN,CDxBC,4ECiCG,iBAAA,CACA,OAAA,CACA,SAAA,CACA,iCAAA,CACA,uBALJ,CDhCC,0CCyCG,YANJ,CASE,yBAAA,sEAGI,YAPJ,CAIA,0CAMI,aAPJ,CACF,CD5CC,sCCuDG,0BARJ,CD/CC,mCC2DG,YAAA,CACA,kCAAA,CACA,eATJ,CAWI,wCACE,gBATN,CDvDC,oDCmEK,UAAA,CACA,WAAA,CAEA,yBAAA,CACA,wBAAA,CAAA,kBAAA,CACA,iBAAA,CACA,gBAAA,CACA,kBAAA,CACA,iBAAA,CACA,QAAA,CACA,MAAA,CACA,OAAA,CACA,aAAA,CACA,eAAA,CACA,kCAAA,CACA,SAAA,CACA,eAAA,CACA,cATN,CD3EC,yDCsFO,mBAAA,CACA,YAAA,CACA,sBARR,CAUM,0DACE,UAAA,CACA,WAAA,CACA,aARR,CDrFC,kDCiGK,YAAA,CACA,iBAAA,CACA,eAAA,CACA,kBAAA,CACA,4BAAA,CACA,YATN","file":"8.6f041df2.chunk.css","sourcesContent":["/* stylelint-disable no-duplicate-selectors */\n@import \"bezierEasing\";\n@import \"tinyColor\";\n\n// We create a very complex algorithm which take the place of original tint/shade color system\n// to make sure no one can understand it ðŸ‘»\n// and create an entire color palette magicly by inputing just a single primary color.\n// We are using bezier-curve easing function and some color manipulations like tint/shade/darken/spin\n.colorPaletteMixin() {\n@functions: ~`(function() {\n  var hueStep = 2;\n  var saturationStep = 0.16;\n  var saturationStep2 = 0.05;\n  var brightnessStep1 = 0.05;\n  var brightnessStep2 = 0.15;\n  var lightColorCount = 5;\n  var darkColorCount = 4;\n\n  var getHue = function(hsv, i, isLight) {\n    var hue;\n    if (hsv.h >= 60 && hsv.h <= 240) {\n      hue = isLight ? hsv.h - hueStep * i : hsv.h + hueStep * i;\n    } else {\n      hue = isLight ? hsv.h + hueStep * i : hsv.h - hueStep * i;\n    }\n    if (hue < 0) {\n      hue += 360;\n    } else if (hue >= 360) {\n      hue -= 360;\n    }\n    return Math.round(hue);\n  };\n  var getSaturation = function(hsv, i, isLight) {\n    var saturation;\n    if (isLight) {\n      saturation = hsv.s - saturationStep * i;\n    } else if (i === darkColorCount) {\n      saturation = hsv.s + saturationStep;\n    } else {\n      saturation = hsv.s + saturationStep2 * i;\n    }\n    if (saturation > 1) {\n      saturation = 1;\n    }\n    if (isLight && i === lightColorCount && saturation > 0.1) {\n      saturation = 0.1;\n    }\n    if (saturation < 0.06) {\n      saturation = 0.06;\n    }\n    return Number(saturation.toFixed(2));\n  };\n  var getValue = function(hsv, i, isLight) {\n    var value;\n    if (isLight) {\n      value = hsv.v + brightnessStep1 * i;\n    }else{\n      value = hsv.v - brightnessStep2 * i\n    }\n    if (value > 1) {\n      value = 1;\n    }\n    return Number(value.toFixed(2))\n  };\n\n  this.colorPalette = function(color, index) {\n    var isLight = index <= 6;\n    var hsv = tinycolor(color).toHsv();\n    var i = isLight ? lightColorCount + 1 - index : index - lightColorCount - 1;\n    return tinycolor({\n      h: getHue(hsv, i, isLight),\n      s: getSaturation(hsv, i, isLight),\n      v: getValue(hsv, i, isLight),\n    }).toHexString();\n  };\n})()`;\n}\n// It is hacky way to make this function will be compiled preferentially by less\n// resolve error: `ReferenceError: colorPalette is not defined`\n// https://github.com/ant-design/ant-motion/issues/44\n.colorPaletteMixin();\n","/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */\n/* stylelint-disable no-duplicate-selectors */\n/* stylelint-disable */\n/* stylelint-disable declaration-bang-space-before,no-duplicate-selectors,string-no-newline */\n"]}